<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thinking in Crowd / 鹄思乱想</title>
  <icon>https://www.gravatar.com/avatar/153cbdd8bc3e96a5208e80ecef4159a4</icon>
  <subtitle>Swan flying in the immense sky</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.thinkingincrowd.me/"/>
  <updated>2020-09-06T14:13:21.262Z</updated>
  <id>http://www.thinkingincrowd.me/</id>
  
  <author>
    <name>鹄思乱想</name>
    <email>chengusky@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Multi-level dynamic supervision in Elixir</title>
    <link href="http://www.thinkingincrowd.me/2020/09/06/multi-level-supervision-in-elixir/"/>
    <id>http://www.thinkingincrowd.me/2020/09/06/multi-level-supervision-in-elixir/</id>
    <published>2020-09-06T14:10:10.000Z</published>
    <updated>2020-09-06T14:13:21.262Z</updated>
    
    <content type="html"><![CDATA[<p>The most fantastic concepts in Erlang &amp; Elixir that fascinate me are:</p><ol><li>Everything can be a process.</li><li>Let it crash.</li></ol><blockquote><p>If you don’t need a process, then you don’t need a process. Use processes only to model runtime properties, such as mutable state, concurrency and failures, never for code organization.</p><p>quoted from <a href="https://hexdocs.pm/elixir/GenServer.html#module-when-not-to-use-a-genserver" target="_blank" rel="noopener">GenServer, Elixir API Documentation</a></p></blockquote><p>In order to fully embrace these features in every programs I write, learning OTP, GenServer, Supervisor is a must.</p><p>But every senior developer knows something very well:  <strong>There is a large gap between knowing something in the book and using it</strong>.</p><p>When reading the「<a href="https://pragprog.com/book/elixir16/programming-elixir-1-6" target="_blank" rel="noopener">Programming Elixir ≥ 1.6</a>」, everything makes sense to me on the chapters about OTP Servers and Supervisors.  But when I tried to implement my own version for a more sophisticated scenario, I realized how big that gap is for me.  </p><p>In this arctile, I would like to help you bridge the gap using my experience and the sophisticated enough scenario which seldom found in other tutorials.</p><h2 id="1-Level"><a href="#1-Level" class="headerlink" title="1-Level"></a>1-Level</h2><p>In many tutorials on <code>Supervisor</code>, they first tell us to create an application that has such capability by running command <code>mix new test --sup</code>.  The <code>application.ex</code> created in the project will be similar as below.  The application itself becomes a Supervisor that contains a defined set of children.  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">Test.Application</span></span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">use</span> Application</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">start</span></span>(_type, _args) <span class="keyword">do</span></span><br><span class="line">    children = [</span><br><span class="line">      &#123;Test.Service, []&#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    opts = [<span class="symbol">strategy:</span> <span class="symbol">:one_for_one</span>, <span class="symbol">name:</span> Test.Supervisor]</span><br><span class="line">    Supervisor.start_link(children, opts)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Later when the tutorial introduces the concept of <code>DynamicSupervisor</code>, it may define a module and modify the <code>application.ex</code> like this:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">Test.MyDynamicSupervisor</span></span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">use</span> DynamicSupervisor</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">start_link</span></span>(init_arg) <span class="keyword">do</span></span><br><span class="line">    DynamicSupervisor.start_link(__MODULE_<span class="number">_</span>, init_arg, <span class="symbol">name:</span> __MODULE_<span class="number">_</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">start_child</span></span>(foo, bar) <span class="keyword">do</span></span><br><span class="line">    spec = %&#123;<span class="symbol">id:</span> Test.MyWorker, <span class="symbol">start:</span> &#123;Test.MyWorker, <span class="symbol">:start_link</span>, [foo, bar]&#125;&#125;</span><br><span class="line">    DynamicSupervisor.start_child(__MODULE_<span class="number">_</span>, spec)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="variable">@impl</span> <span class="keyword">true</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">init</span></span>(init_arg) <span class="keyword">do</span></span><br><span class="line">    DynamicSupervisor.init(<span class="symbol">strategy:</span> <span class="symbol">:one_for_one</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Modified in applicaiton.ex to include the Test.MyDynamicSupervisor</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span></span>(_type, _args) <span class="keyword">do</span></span><br><span class="line">  children = [</span><br><span class="line">    &#123;Test.Service, []&#125;,</span><br><span class="line">    Test.MyDynamicSupervisor</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  opts = [<span class="symbol">strategy:</span> <span class="symbol">:one_for_one</span>, <span class="symbol">name:</span> Test.Supervisor]</span><br><span class="line">  Supervisor.start_link(children, opts)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>The process hierarchy for the above example is:</p><pre class="mermaid">graph TD  A(Application) --> B(Test.Service) & C(Test.MyDynamicSupervisor)  C(Test.MyDynamicSupervisor) --> D(Test.MyWorker) & E(Test.MyWorker)</pre><p>In a word, most of the tutorial about <code>Supervisor</code>, especially <code>DynamicSupervisor</code>, only has 1-level depth.</p><p>But the real world is much more than that.</p><h2 id="Multi-Level"><a href="#Multi-Level" class="headerlink" title="Multi-Level"></a>Multi-Level</h2><p>My application that involves multi-level supervision is a classic scenario for many personal or large corporate projects, Web Crawling.  This scenario is far more real and practical than most of the examples in the tutorials out there.  The process hierarchy of the application design is:</p><pre class="mermaid">graph TD  A(Spider Application) --> B(SpiderEngine)  B --> C(SpiderEngine.Manager) & D(SpiderEngine.Supervisor) & E(SpiderStorage)  D --> F(Spider.Facebook) & G(Spider.Instagram)  F --> H(Spider.Manager.Facebook) & I(Spider.Supervisor.Facebook)  G --> J(Spider.Manager.Instagram) & K(Spider.Supervisor.Instagram)  I --> L(Spider.Fetcher.Facebook.1) & M(Spider.Fetcher.Facebook.2)  K --> N(Spider.Fetcher.Instagram.1)</pre><p>You may have already known, most of the modules are normal <code>GenServer</code> except these:</p><ul><li><strong>Supervisor</strong>: <code>SpiderEngine</code>, <code>Spider.Instagram</code>, <code>Spider.Facebook</code></li><li><strong>DynamicSupervisor</strong>: <code>SpiderEngine.Supervisor</code>, <code>Spider.Supervisor.Instagram</code>, <code>Spider.Supervisor.Facebook</code></li></ul><h3 id="Why-the-design"><a href="#Why-the-design" class="headerlink" title="Why the design"></a>Why the design</h3><pre class="mermaid">sequenceDiagram  participant SpiderStorage  participant SpiderEngine.Manager  participant SpiderEngine.Supervisor  participant Spider  participant Spider.Manager  participant Spider.Supervisor  participant Spider.Fetcher  SpiderEngine.Manager->>SpiderStorage: What spiders to start?  SpiderEngine.Supervisor-->>Spider: Dynamically starts spider engine  Spider.Manager->>SpiderStorage: The base domain and urls to fetched?  Spider.Supervisor-->>Spider.Fetcher: Dynamically starts fetcher  Spider.Fetcher->>Spider.Manager: Asks for next url and/or sends back more urls  SpiderEngine.Manager->>Spider.Manager: Reset fecher count, speed, urls, etc.</pre><ul><li><p><code>SpiderEngine</code> is the root of the whole web crawler.<br>  The reason of not using Application directly as root because the application might contain other components, such as Phoenix API and Web UI to help managing the crawler.</p><p>  The benefit of grouping all crawling behaviors under one particular module is the freedom to move them all at once easily if necessary.</p></li><li><p><code>SpiderEngine</code> must be able to supervise different types of crawlers depending on the nature of the websites or systems you want to crawl information from.</p></li><li><p>Types of the supported spiders should be configurable so that there must a <code>DynamicSupervisor</code> under <code>SpiderEngine</code>.</p></li><li><p>The reason of separating <code>xxx.Manager</code> from the <code>xxx.Supervisor</code> is that <code>Supervisor/DynamicSupervisor</code> is purely for process supervision.  There can be no other message passing between the <code>Supervisor/DynamicSupervisor</code> and children workers.  Hence, all children workers’ control logic have to be in the other module, <code>xxx.Manager</code>.  </p></li><li><p><code>Spider.Facebook</code>, <code>Spider.Instagram</code> and other possible crawlers for different websites, are supervisor of their own to manage their own crawling policy, frequency, fetcher count, etc.</p></li></ul><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>I hope the process hierarchy and sequence diagram explain clearly enough.  Let’s move on to the real code.  Actually, there are only two things that you need to clearly understand in order to keep your thought straight on building the process hierarchy.</p><p><strong>start_link/3</strong></p><p>The most important thing to be awared is the <code>name</code> option in <code>start_link/3</code>.  It’s for <strong>Name Registration</strong> which causes trouble if you do not pay attention to when constructing the multi-level supervision.</p><p>In my scenario, <code>SpiderStorage</code>, <code>SpiderEngine.Manager</code>, <code>SpiderEngine</code> and <code>SpiderEngine.Supervisor</code> only have one running process.  Hence, their calls to <code>start_link/3</code> can be simply:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GenServer.start_link(__MODULE_<span class="number">_</span>, <span class="symbol">:no_args</span>, <span class="symbol">name:</span> __MODULE_<span class="number">_</span>)</span><br><span class="line"></span><br><span class="line">Supervisor.start_link(__MODULE_<span class="number">_</span>, <span class="symbol">:no_args</span>, <span class="symbol">name:</span> __MODULE_<span class="number">_</span>)</span><br><span class="line"></span><br><span class="line">DynamicSupervisor.start_link(__MODULE_<span class="number">_</span>, <span class="symbol">:no_args</span>, <span class="symbol">name:</span> __MODULE_<span class="number">_</span>)</span><br></pre></td></tr></table></figure><p>However, for the <code>Spider</code>, <code>Spider.Mananger</code>, <code>Spider.Supervisor</code>, they have multiple processes for different types of spiders.  Hence, their names should be differentiated.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for Spider</span></span><br><span class="line">Supervisor.start_link(__MODULE_<span class="number">_</span>, spider_config, <span class="symbol">name:</span> <span class="symbol">:<span class="string">"Spider.<span class="subst">#&#123;spider_config.name&#125;</span>"</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for Spider.Manager</span></span><br><span class="line">GenServer.start_link(__MODULE_<span class="number">_</span>, spider_config, <span class="symbol">name:</span> <span class="symbol">:<span class="string">"Spider.Manager.<span class="subst">#&#123;spider_config.name&#125;</span>"</span></span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for Spider.Supervisor</span></span><br><span class="line">DynamicSupervisor.start_link(__MODULE_<span class="number">_</span>, <span class="symbol">:no_args</span>, <span class="symbol">name:</span> <span class="symbol">:<span class="string">"Spider.Supervisor.<span class="subst">#&#123;spider_config.name&#125;</span>"</span></span>)</span><br></pre></td></tr></table></figure><p>How about <code>Spider.Fetcher</code>?  There are also multiple processes for it, but do we have to start them with different names?  </p><p>I think it’s a judgement call.  The communication between <code>Spider.Fetcher</code> and <code>Spider.Manager</code> are through PID.    Hence, if you have saved those children PID somewhere when <code>Spider.Manager</code> starts them, or the message is sent from <code>Spider.Fetcher</code> to <code>Spider.Manager</code> to get information, it’s not quite necessary to name this type of children workers, especially when their amount is large.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for Fetcher, you can omit the name option or simply use a combined index as name</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start_link</span></span>(state = &#123;spider_name, index, _manager_pid&#125;) <span class="keyword">do</span></span><br><span class="line">  GenServer.start_link(__MODULE_<span class="number">_</span>, state, <span class="symbol">name:</span> <span class="symbol">:<span class="string">"Spider.Fetcher.<span class="subst">#&#123;spider_name&#125;</span>.<span class="subst">#&#123;index&#125;</span>"</span></span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><strong>Child Spec</strong></p><p>There are different forms of child specification when we start them by Supervisor:</p><ul><li>A map</li><li>A tuple with a module as first element and the start argument as second</li><li>A module</li></ul><p>Below three samples are equal:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># I just present three forms here.</span></span><br><span class="line"><span class="comment"># They cannot all exist in one children list for Supervisor.</span></span><br><span class="line"><span class="symbol">children:</span> [</span><br><span class="line">  %&#123;</span><br><span class="line">    <span class="symbol">id:</span> Child,</span><br><span class="line">    <span class="symbol">start:</span> &#123;Child, <span class="symbol">:start_link</span>, [[]]&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;Child, []&#125;,</span><br><span class="line">  Child</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>If you are using the map form, it’s important to know that, the <code>id</code> field is used by the supervisor internally to identify the child.  Hence, even in our scenario with multi-level supervision, we do not need to use spider name to differentiate it besides module name.</p><p><strong>start_child/2</strong></p><p>This is where you should pay attention to.</p><p>The first argument of the supervisor’s reference.  It can be PID or other name forms used in <strong>Name Registration</strong>.  </p><p>So in this spider scenario, the only place need to take care is the <code>Spider.Supervisor</code> where it starts the <code>Spider.Fetcher</code>.  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The spec can be any one of the three forms above.</span></span><br><span class="line"><span class="comment"># The important thing is that the supervisor name matches the one used in start_link/3</span></span><br><span class="line">DynamicSupervisor.start_child(<span class="symbol">:<span class="string">"Spider.Supervisor.<span class="subst">#&#123;spider_name&#125;</span>"</span></span>, spec)</span><br></pre></td></tr></table></figure><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>I hope this more sophisticated and real world example can help you understand the OTP Supervision more clearly.</p><p>Be used to model the system by process and modelling them correctly are just the first step on learning OTP.  Next, it would be the message passing between the them for coordination.  I will share more when this web crawling project goes.</p><p>Please don’t hesitate to leave a comment if you have anything supplement or good advice.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The most fantastic concepts in Erlang &amp;amp; Elixir that fascinate me are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Everything can be a process.&lt;/li&gt;
&lt;li&gt;Let it crash
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="Elixir" scheme="http://www.thinkingincrowd.me/tags/Elixir/"/>
    
      <category term="Supervisor" scheme="http://www.thinkingincrowd.me/tags/Supervisor/"/>
    
      <category term="OTP" scheme="http://www.thinkingincrowd.me/tags/OTP/"/>
    
  </entry>
  
  <entry>
    <title>It&#39;s not that easy to configure mnesia dir as I thought</title>
    <link href="http://www.thinkingincrowd.me/2020/05/31/not-that-easy-to-configure-mnesia-dir-as-i-thought/"/>
    <id>http://www.thinkingincrowd.me/2020/05/31/not-that-easy-to-configure-mnesia-dir-as-i-thought/</id>
    <published>2020-05-31T15:05:16.000Z</published>
    <updated>2020-05-31T15:03:34.770Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why-Directory-is-Required"><a href="#Why-Directory-is-Required" class="headerlink" title="Why Directory is Required"></a>Why Directory is Required</h2><p>After using「<a href="http://www.thinkingincrowd.me/2020/04/16/One-Elixir-Code-for-Both-Mnesia-Master-Child/">One Elixir Code for Both Mnesia Master &amp; Child</a>」locally for basic testing, next step is to explore how to easily deploy to remote server.</p><p>Regarding the deployment, I am using Ansible + Mix Release, instead of Docker.  The main reason is to use native tools as much as possible within Elixir ecosystem as this is the main approach of learning one language.</p><p>Before using Mnesia, configuring one data directory for it is very important.</p><p>Theoretically, Mnesia creates one data directory, as format <code>NODE_NAME@HOST</code>, automatically in the same level of the program running directory even though you do not provide the parameter for it.  However, this is not one good approach.  Compared to the program or code directory, data directory should be permanent.  Because every time you deploy a new version of the code to the server, it should have a separate directory in order to keep track of the record or even for emergent fallback.  While data directory should be consistent on matter how many version of program code you deployed.</p><h2 id="The-Mix-Release-Way"><a href="#The-Mix-Release-Way" class="headerlink" title="The Mix Release Way"></a>The Mix Release Way</h2><p>When we use <code>mix release.init</code> to prepare files for release, one file named <code>vm.args.eex</code> will be generated.  This file contains the Erlang VM parameter we want to pass.  It will be renamed to <code>vm.args</code> during package generation.</p><p>But, if we set directory path in <code>vm.args.eex</code>, it becomes one compile-time configuration, instead of one run-time parameter.  How can one single release package run using different data directory?  And why would I want to do that?</p><h2 id="Multi-Site-High-Availability-amp-Blue-Green-Deployment"><a href="#Multi-Site-High-Availability-amp-Blue-Green-Deployment" class="headerlink" title="Multi-Site High Availability &amp; Blue Green Deployment"></a>Multi-Site High Availability &amp; Blue Green Deployment</h2><p>Through below steps, no matter using one or multiple machines:  </p><ol><li>Setup data directory A, point server A to it.  </li><li>Setup data directory B, point server B to it.  </li><li>Stop server A, deploy new version A+ and point to data directory A, restarts A+.  </li><li>Stop server B, deploy new version B+ and point to data directory B, restarts B+.  </li></ol><p>we can have at least one running Mnesia and Elixir nodes any time achieving multi-site HA and blue green deployment without stopping the system.</p><p><em>Note: For a Mnesia cluster, we should not stop all nodes.  If they must be stopped for some reasons, the restart sequence should be the opposive of stopping sequence.  For example, if you stop the nodes in sequence of AB, then the starting sequence should be BA.</em></p><h2 id="Parameter-format-in-vm-args"><a href="#Parameter-format-in-vm-args" class="headerlink" title="Parameter format in vm.args"></a>Parameter format in vm.args</h2><p>According to the tips in <code>vm.args</code>, I checked <a href="http://erlang.org/doc/man/erl.html" target="_blank" rel="noopener">http://erlang.org/doc/man/erl.html</a>, but still have no idea on how mensia directory should be set.  Based on the material I collected and testing done before, there are a couple of ways to set the dir parameter:  </p><ul><li>Through command line parameter: <code>iex --erl &#39;-mnesia dir &quot;path/to/db&quot;&#39; -S mix</code>  </li><li>Setup in Elixir <code>config.exs</code>: <code>config :mnesia, dir: &#39;path/to/db&#39;</code>  </li></ul><p>However, no matter I set <code>-mnesia dir &quot;path/to/db&quot;</code> or <code>-mnesia dir &#39;path/to/db&#39;</code> in <code>vm.args</code>, it always has below error while run <code>:mnesia.info</code> after server starts:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">** (exit) &#123;:aborted, &#123;:application_load_error, &#123;:bad_environment_value, &apos;path/to/db&apos;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>After some googling, I updated the setting based on one comment in <a href="https://stackoverflow.com/questions/23635474/how-to-specify-directory-for-mnesia-in-cowboy-application" target="_blank" rel="noopener">Stackoverflow</a> and change it to <code>-mnesia {dir,&#39;path/to/db&#39;}</code>.  Although no more error, Mnesia was still not picking up the directory I provided.  </p><p>Come on, what should be the right format?  </p><h2 id="The-Right-Way-to-Debug"><a href="#The-Right-Way-to-Debug" class="headerlink" title="The Right Way to Debug"></a>The Right Way to Debug</h2><p>Why it does not work?  Incorrect parameter, or anything else?  </p><p>Debugging and finding the root cause is one fundamental and important skill as a developer.  Many inexperienced developer feels helpless once nothing can be found in Google or Stackoverflow.  </p><p>Actually, the real problem now is: I do not know whether the Erlang VM receives the parameter or not.  </p><p>Hence, the approach to dig out the cause should be:  </p><ol><li>Find out what the system state should be when it’s working properly.</li><li>Based on the normal system state as baseline, we can tell if the parameter is accepted or not.</li><li>If aligned, non-parameter setup issue; Else, it should be.</li></ol><p>With the help of Google, Erlang method <code>init.get_arguments</code> can be used to check all command line parameters and system flags.</p><p>Below is the output after configuring <code>-mnesia {dir,&#39;path/to/db&#39;}</code> in <code>vm.args</code>.  Judging from other parameters, such as <code>boot_var</code>, it should still be invalid parameter issue although it does not have any error during system startup.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">iex(mgr<span class="variable">@127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>)<span class="number">2</span>&gt; <span class="symbol">:init</span>.get_arguments</span><br><span class="line">[</span><br><span class="line">  <span class="symbol">root:</span> [<span class="string">'path/to/_build/prod/rel/mgr'</span>],</span><br><span class="line">  <span class="symbol">progname:</span> [<span class="string">'erl'</span>],</span><br><span class="line">  <span class="symbol">home:</span> [<span class="string">'/Users/kenchen'</span>],</span><br><span class="line">  <span class="symbol">kernel:</span> [<span class="string">'shell_history'</span>, <span class="string">'enabled'</span>],</span><br><span class="line">  <span class="symbol">elixir:</span> [<span class="string">'ansi_enabled'</span>, <span class="string">'true'</span>],</span><br><span class="line">  <span class="symbol">noshell:</span> [],</span><br><span class="line">  <span class="symbol">mode:</span> [<span class="string">'embedded'</span>],</span><br><span class="line">  <span class="symbol">setcookie:</span> [<span class="string">'spider'</span>],</span><br><span class="line">  <span class="symbol">name:</span> [<span class="string">'mgr@127.0.0.1'</span>],</span><br><span class="line">  <span class="symbol">config:</span> [<span class="string">'path/to/_build/prod/rel/mgr/tmp/mgr-0.0.1-20200531112256-c4fe.runtime'</span>],</span><br><span class="line">  <span class="symbol">boot:</span> [<span class="string">'path/to/_build/prod/rel/mgr/releases/0.0.1/start'</span>],</span><br><span class="line">  <span class="symbol">boot_var:</span> [<span class="string">'RELEASE_LIB'</span>,</span><br><span class="line">   <span class="string">'path/to/_build/prod/rel/mgr/lib'</span>],</span><br><span class="line">  <span class="symbol">mnesia:</span> [<span class="string">'&#123;dir,path/to/db&#125;'</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>Below is the ouput after starting system with command <code>iex --erl &#39;-mnesia dir &quot;path/to/db&quot;&#39; -S mix</code>.  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">iex(mgr<span class="variable">@127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>)<span class="number">2</span>&gt; <span class="symbol">:init</span>.get_arguments</span><br><span class="line">[</span><br><span class="line">  <span class="symbol">root:</span> [<span class="string">'path/to/_build/prod/rel/mgr'</span>],</span><br><span class="line">  <span class="symbol">progname:</span> [<span class="string">'erl'</span>],</span><br><span class="line">  <span class="symbol">home:</span> [<span class="string">'/Users/kenchen'</span>],</span><br><span class="line">  <span class="symbol">kernel:</span> [<span class="string">'shell_history'</span>, <span class="string">'enabled'</span>],</span><br><span class="line">  <span class="symbol">elixir:</span> [<span class="string">'ansi_enabled'</span>, <span class="string">'true'</span>],</span><br><span class="line">  <span class="symbol">noshell:</span> [],</span><br><span class="line">  <span class="symbol">mode:</span> [<span class="string">'embedded'</span>],</span><br><span class="line">  <span class="symbol">setcookie:</span> [<span class="string">'spider'</span>],</span><br><span class="line">  <span class="symbol">name:</span> [<span class="string">'mgr@127.0.0.1'</span>],</span><br><span class="line">  <span class="symbol">config:</span> [<span class="string">'path/to/_build/prod/rel/mgr/tmp/mgr-0.0.1-20200531112256-c4fe.runtime'</span>],</span><br><span class="line">  <span class="symbol">boot:</span> [<span class="string">'path/to/_build/prod/rel/mgr/releases/0.0.1/start'</span>],</span><br><span class="line">  <span class="symbol">boot_var:</span> [<span class="string">'RELEASE_LIB'</span>,</span><br><span class="line">   <span class="string">'path/to/_build/prod/rel/mgr/lib'</span>],</span><br><span class="line">  <span class="symbol">mnesia:</span> [<span class="string">'dir'</span>, <span class="string">'"path/to/db"'</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>We can see that, <code>&#39;&quot;path/to/db&quot;&#39;</code> should be the correct format Erlang VM recognizes.  It has both double quote and single quote.  When I changed the parameter to be <code>-mnesia dir &#39;&quot;path/to/db&quot;&#39;</code> in file <code>vm.args</code>, problem solved.</p><p><em>Note: I found that the Mnesia official documentation has stated the command to start Mnesia and pass parameter: <code>erl -mnesia dir &#39;&quot;/tmp/funky&quot;&#39;</code>.  Although it is not exactly saying what to set in vm.args, it is still a good hint if I read this in advance.</em></p><h2 id="Ansible"><a href="#Ansible" class="headerlink" title="Ansible"></a>Ansible</h2><p>I only solves part of the puzzle after resovling previous issue.  How can I use Ansible to dynamically configure the parameter and add it to <code>vm.args</code>?</p><p>In the Ansible playbook, I define a task:  </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">update</span> <span class="string">mnesia</span> <span class="string">path</span> <span class="string">in</span> <span class="string">vm.args</span></span><br><span class="line"><span class="attr">  shell:</span> <span class="string">"echo -mnesia dir <span class="template-variable">&#123;&#123; data_root &#125;&#125;</span> &gt;&gt; <span class="template-variable">&#123;&#123; release_root &#125;&#125;</span>/vm.args"</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line"><span class="attr">    executable:</span> <span class="string">/bin/bash</span></span><br></pre></td></tr></table></figure><p>Because the Mnesia dir parameter requires both double quote and single quote, I was beaten heavily on trying to escape them in late night.</p><p>But it does not take me a long time after clearing my mind by breaking down the issue.</p><ol><li>How to escape single or double quote in shell.  </li><li>How to escape single or double quote in Yaml.  </li></ol><p>It’s not difficult to do that in shell：<code>echo -mnesia dir &quot;&#39;\&quot;/path/to/db\&quot;&#39;&quot; &gt;&gt; ~/test.txt</code>.</p><p>But it’s a little bit more complicated in Yaml, especially when you are using double quote scala.</p><ul><li>In double quote scala, it uses <code>\</code> to escape double quote, such as <code>&quot;here&#39;s to \&quot;quotes\&quot;&quot;</code>.  </li></ul><p>And so the Ansible task should be:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell: &quot;echo -mnesia dir \&quot;&apos;\\\&quot;&#123;&#123; data_root &#125;&#125;\\\&quot;&apos;\&quot; &gt;&gt; &#123;&#123; release_root &#125;&#125;/vm.args&quot;</span><br></pre></td></tr></table></figure><ul><li>In single quote scala, it needs to duplicate single quote to escape, such as <code>&#39;here&#39;&#39;s to &quot;quotes&quot;&#39;</code>.  </li></ul><p>And so the Ansible task should be:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell: &apos;echo -mnesia dir &quot;&apos;&apos;\&quot;&#123;&#123; data_root &#125;&#125;\&quot;&apos;&apos;&quot; &gt;&gt; &#123;&#123; release_root &#125;&#125;/vm.args&apos;</span><br></pre></td></tr></table></figure><p>I never thought so much trouble needs to go through in order to set the dir parameter right for Mnesia.  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Why-Directory-is-Required&quot;&gt;&lt;a href=&quot;#Why-Directory-is-Required&quot; class=&quot;headerlink&quot; title=&quot;Why Directory is Required&quot;&gt;&lt;/a&gt;Why Directo
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="Elixir" scheme="http://www.thinkingincrowd.me/tags/Elixir/"/>
    
      <category term="Mnesia" scheme="http://www.thinkingincrowd.me/tags/Mnesia/"/>
    
  </entry>
  
  <entry>
    <title>Unsolved puzzle of mnesia behavior in mix test</title>
    <link href="http://www.thinkingincrowd.me/2020/04/28/Unsolved-puzzle-of-mnesia-behavior-in-mix-test/"/>
    <id>http://www.thinkingincrowd.me/2020/04/28/Unsolved-puzzle-of-mnesia-behavior-in-mix-test/</id>
    <published>2020-04-28T13:23:35.000Z</published>
    <updated>2020-04-28T14:44:11.380Z</updated>
    
    <content type="html"><![CDATA[<p>Recently, I am evaluating the usage of Mnesia in Elixir.</p><p>After figuring out how to use <a href="http://www.thinkingincrowd.me/2020/04/16/One-Elixir-Code-for-Both-Mnesia-Master-Child/">One Elixir Code for Both Mnesia Master &amp; Child</a>, I moved on to data CRUD operation.  </p><p>Before writing actual testing code, in order to make each test independent, I need to first complete the setup and teardown tasks between each test.</p><h2 id="Test-Callbacks"><a href="#Test-Callbacks" class="headerlink" title="Test Callbacks"></a>Test Callbacks</h2><p>In Elixir, these callbacks can be used:  </p><ul><li><code>setup_all</code>: Invoked once per module before any test is run.  </li><li><code>setup</code>: Invoked once before each test.  </li><li><code>on_exit</code>: Registered on demand during setup.  </li></ul><p><em>Tips</em>: Multiple <code>setup</code> and <code>setup_all</code> are allowed.  They are invoked in sequence.  Failures in <code>setup_all</code> or <code>setup</code> will stop all remaining setup callbacks from executing while <code>on_exit</code> will always run.  </p><p>The test script looks like this:  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">Sample.MnesiaTest</span></span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">use</span> ExUnit.Case</span><br><span class="line">  <span class="keyword">alias</span> <span class="symbol">:mnesia</span>, <span class="symbol">as:</span> Mnesia</span><br><span class="line"></span><br><span class="line">  ExUnit.Case.register_attribute(__MODULE_<span class="number">_</span>, <span class="symbol">:mnesia_table</span>, <span class="symbol">accumulate:</span> <span class="keyword">true</span>)</span><br><span class="line"></span><br><span class="line">  <span class="variable">@node_list</span> [node()]</span><br><span class="line"></span><br><span class="line">  setup_all <span class="keyword">do</span></span><br><span class="line">    on_exit <span class="keyword">fn</span> -&gt;</span><br><span class="line">      Mnesia.stop()</span><br><span class="line">      Mnesia.delete_schema(<span class="variable">@node_list</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    Mnesia.create_schema(<span class="variable">@node_list</span>)</span><br><span class="line">    Mnesia.start()</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  setup context <span class="keyword">do</span></span><br><span class="line">    on_exit <span class="keyword">fn</span> -&gt;</span><br><span class="line">      Enum.each(context.registered[<span class="symbol">:mnesia_table</span>], <span class="keyword">fn</span> table -&gt;</span><br><span class="line">        Mnesia.delete_table(table)</span><br><span class="line">      <span class="keyword">end</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="variable">@mnesia_table</span> <span class="symbol">:test</span></span><br><span class="line">  test <span class="string">"Create table"</span>, _context <span class="keyword">do</span></span><br><span class="line">    /<span class="regexp">/ Dummy test code</span></span><br><span class="line"><span class="regexp">  end</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  @mnesia_table :test</span></span><br><span class="line"><span class="regexp">  test "Insert Data", _context do</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ Dummy test code</span></span><br><span class="line"><span class="regexp">  end</span></span><br><span class="line"><span class="regexp">end</span></span><br></pre></td></tr></table></figure><ul><li>Attribute <code>:mnesia_table</code> is registered and used on each test to annotate the table name within the following test.  </li><li>In <code>setup_all</code>, it performs steps to bring up the whole Mnesia and shutdown.  </li><li>In <code>setup</code>, it destroys the tables used in each test annotated by the <code>:mnesia_table</code> attribute.  </li></ul><p>I set the <code>accumulate: true</code> so that we can specify multiple <code>@mnesia_table</code> attributes and so the value of <code>context.registered[:mnesia_table]</code> is a list.  </p><p><em>Tips</em>: Attribute, similar to tag, is cleared after each test.  The difference is that when a tag is given more than once, the last value wins.</p><h2 id="Puzzle"><a href="#Puzzle" class="headerlink" title="Puzzle"></a>Puzzle</h2><p>Everything sounds smooth but I noticed one thing after running <code>mix test</code>, the mnesia directory still has files inside.  Shouldn’t all files removed after calling <code>delete_schema</code>?  But the result of <code>delete_schema</code> returns <code>:ok</code> when I suspected its failure and printed it.  </p><p>Later, I realized that the mnesia directory contains the table name used in the application startup logic prepared last week.  It’s the table and schema created during the application startup when running <code>mix test</code>.  </p><p><img alt="Mnesia test in umbrella project" src="https://raw.githubusercontent.com/kenspirit/blog-cdn-data/master/mnesia_test_in_umbrella.png"></p><p>Below is the observation of the puzzle:</p><ol><li>If <code>mix test</code> is run under umbrella root, the mnesia directory is generated under root and the files cannot be removed.  </li><li>However, if <code>mix test</code> is run under the folder of <code>app\mgr</code> where the mnesia startup and setup logic exists, the mnesia directory is generated there but the files can be removed.  </li><li>If I add <code>@moduletag :no_start</code> to the test module, add below code to the umbrella root <code>mix.exs</code>, and then run <code>mix ut</code>, the behavior just like running <code>mix test</code> in <code>app\mgr</code>.</li></ol><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">project</span></span> <span class="keyword">do</span></span><br><span class="line">  [</span><br><span class="line">    ...</span><br><span class="line">    <span class="symbol">aliases:</span> [<span class="symbol">ut:</span> <span class="string">"test --no-start --only no_start"</span>],</span><br><span class="line">    <span class="symbol">preferred_cli_env:</span> [<span class="symbol">ut:</span> <span class="symbol">:test</span>]</span><br><span class="line">  ]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Looks like there is something mysterious of the umbrella project causing the mnesia directory issue.  </p><p>It took me hours to try to figure out why but no luck.  </p><p>Before I got desperate and gave up, I found that the problem can be solved after I changed the <code>config.exs</code> following the suggestion in <a href="https://github.com/Nebo15/ecto_mnesia/issues/40" target="_blank" rel="noopener">https://github.com/Nebo15/ecto_mnesia/issues/40</a>:  </p><p>from</p><p><code>config :mnesia, dir: &#39;mnesia.#{Mix.env}.#{node()}&#39;</code></p><p>to</p><p><code>config :mnesia, dir: to_charlist Path.join(File.cwd!, &#39;mnesia.#{Mix.env}.#{node()}&#39;)</code></p><p>Although the problem can be solved, the reason is still a puzzle remained.  Maybe it is the absolute and relative path handling issue of mnesia in umbrella project?  Your advice or explanation is greatly appreciated.  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Recently, I am evaluating the usage of Mnesia in Elixir.&lt;/p&gt;
&lt;p&gt;After figuring out how to use &lt;a href=&quot;http://www.thinkingincrowd.me/2020
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="Elixir" scheme="http://www.thinkingincrowd.me/tags/Elixir/"/>
    
      <category term="Mnesia" scheme="http://www.thinkingincrowd.me/tags/Mnesia/"/>
    
  </entry>
  
  <entry>
    <title>One Elixir Code for Both Mnesia Master &amp; Child</title>
    <link href="http://www.thinkingincrowd.me/2020/04/16/One-Elixir-Code-for-Both-Mnesia-Master-Child/"/>
    <id>http://www.thinkingincrowd.me/2020/04/16/One-Elixir-Code-for-Both-Mnesia-Master-Child/</id>
    <published>2020-04-16T14:40:43.000Z</published>
    <updated>2020-04-18T23:17:49.313Z</updated>
    
    <content type="html"><![CDATA[<p>Mnesia is a native, persistent and distributed database in Erlang’s world.  If we want to use Erlang/Elixir to build a fault-tolerance distributed application, Mnesia is quite attractive because it’s so closed to Erlang and has such great features:  </p><ul><li>Fast real-time key/value lookup  </li><li>Complicated non-real-time queries mainly for operation and maintenance  </li><li>Distributed data because of distributed applications  </li><li>High fault tolerance  </li><li>Dynamic reconfiguration  </li><li>Complex objects  </li></ul><p>To start using Mnesia, a couple of steps are required:  </p><ol><li>Specify a directory for data persistence</li><li>Create schema (Only for the first time usage)</li><li>Start Mnesia</li><li>Create tables when required</li></ol><p>It does not seems challenging at first glance.  However, it is if you think ahead on how it’s going to be used in dev, test and production environment with distributed nodes.  Let me elaborate why below.</p><h2 id="Specifying-Directory"><a href="#Specifying-Directory" class="headerlink" title="Specifying Directory"></a>Specifying Directory</h2><p>This sounds easy but devil lies in detail.  </p><h3 id="Use-Environment-Variable"><a href="#Use-Environment-Variable" class="headerlink" title="Use Environment Variable"></a>Use Environment Variable</h3><p>Below command can be used when starting up your elixir application and set the Mnesia directory with the environment variable.  </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iex --erl <span class="string">'-mnesia dir "path/to/db"'</span> -S mix</span><br></pre></td></tr></table></figure><p>However, it’s inconvenient as you have to constantly change the value for different environments, and nodes when testing distributed scenarios.</p><h3 id="Use-Mix-Config"><a href="#Use-Mix-Config" class="headerlink" title="Use Mix Config"></a>Use Mix Config</h3><p>The idea of using Mix Config may be your instant reaction after that.  We can setup in <code>config/config.exs</code> to fix above problems:  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config <span class="symbol">:mnesia</span>, <span class="symbol">dir:</span> <span class="string">'mnesia.<span class="subst">#&#123;Mix.env&#125;</span>.<span class="subst">#&#123;node()&#125;</span>'</span></span><br></pre></td></tr></table></figure><p><em>Notes:</em> <code>dir</code> path must use single quote.</p><p>The settings here can separate different environments for you easily.  However, as the Mix Config is compile-time setting, the <code>node()</code> might cause undesired effect because it’s the value <code>:nonode@nohost</code> evaluated in compile time.  That should not be the desired value you want to use in production environment.</p><h3 id="Use-Config-and-Release"><a href="#Use-Config-and-Release" class="headerlink" title="Use Config and Release"></a>Use Config and Release</h3><p>After Elixir 1.9, there is a new <code>Config</code> module as a replacement for <code>Mix.Config</code> and Mix Release is introduced.</p><p>We can setup a file named <code>releases.exs</code> in <code>config</code> folder along with <code>config.exs</code>:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># In releases.exs file</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Config</span><br><span class="line"></span><br><span class="line">config <span class="symbol">:mnesia</span>, <span class="symbol">dir:</span> System.get_env(<span class="string">"MNESIA_DIR"</span>) || <span class="string">'mnesia_<span class="subst">#&#123;System.get_env(<span class="string">"RELEASE_NODE"</span>)&#125;</span>'</span></span><br></pre></td></tr></table></figure><p>Then in <code>rel</code> folder created by <code>mix release.init</code>, we can update <code>env.sh.eex</code> or <code>env.bat.eex</code> to set above variables.  Normally, we just need to uncomment the last two lines in the file.  But I have two extra lines ahead to use the <code>HOST</code> and <code>NODE_NAME</code> variables so that I can easily change them for the node.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sets and enables heart (recommended only in daemon mode)</span></span><br><span class="line"><span class="comment"># case $RELEASE_COMMAND in</span></span><br><span class="line"><span class="comment">#   daemon*)</span></span><br><span class="line"><span class="comment">#     HEART_COMMAND="$RELEASE_ROOT/bin/$RELEASE_NAME $RELEASE_COMMAND"</span></span><br><span class="line"><span class="comment">#     export HEART_COMMAND</span></span><br><span class="line"><span class="comment">#     export ELIXIR_ERL_OPTIONS="-heart"</span></span><br><span class="line"><span class="comment">#     ;;</span></span><br><span class="line"><span class="comment">#   *)</span></span><br><span class="line"><span class="comment">#     ;;</span></span><br><span class="line"><span class="comment"># esac</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the release to work across nodes. If using the long name format like</span></span><br><span class="line"><span class="comment"># the one below (my_app@127.0.0.1), you need to also uncomment the</span></span><br><span class="line"><span class="comment"># RELEASE_DISTRIBUTION variable below.</span></span><br><span class="line"></span><br><span class="line">HOST=<span class="variable">$&#123;</span><span class="symbol">HOST:</span>-<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>&#125;</span><br><span class="line">NODE_NAME=<span class="variable">$&#123;</span><span class="symbol">NODE_NAME:</span>-&lt;%= <span class="variable">@release</span>.name %&gt;&#125;</span><br><span class="line"></span><br><span class="line">export RELEASE_DISTRIBUTION=name</span><br><span class="line">export RELEASE_NODE=<span class="variable">$NODE_NAME</span>@<span class="variable">$HOST</span></span><br></pre></td></tr></table></figure><p>Once you have completed the setup above, you can update the <code>mix.exs</code> as below to build different releases and startup the apps with different node names as needed.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">project</span></span> <span class="keyword">do</span></span><br><span class="line">  [</span><br><span class="line">    <span class="symbol">apps_path:</span> <span class="string">"apps"</span>,</span><br><span class="line">    <span class="symbol">version:</span> <span class="string">"0.1.0"</span>,</span><br><span class="line">    <span class="symbol">start_permanent:</span> Mix.env() == <span class="symbol">:prod</span>,</span><br><span class="line">    <span class="symbol">deps:</span> deps(),</span><br><span class="line">    <span class="symbol">releases:</span> [</span><br><span class="line">      <span class="symbol">foo:</span> [</span><br><span class="line">        <span class="symbol">version:</span> <span class="string">"0.0.1"</span>,</span><br><span class="line">        <span class="symbol">applications:</span> [<span class="symbol">mgr:</span> <span class="symbol">:permanent</span>],</span><br><span class="line">        <span class="symbol">cookie:</span> <span class="string">"thinkingincrowd"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="symbol">bar:</span> [</span><br><span class="line">        <span class="symbol">version:</span> <span class="string">"0.0.1"</span>,</span><br><span class="line">        <span class="symbol">applications:</span> [<span class="symbol">worker:</span> <span class="symbol">:permanent</span>],</span><br><span class="line">        <span class="symbol">cookie:</span> <span class="string">"thinkingincrowd"</span></span><br><span class="line">      ]</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="One-Elixir-Code"><a href="#One-Elixir-Code" class="headerlink" title="One Elixir Code"></a>One Elixir Code</h2><p>Now goes to the second step.</p><p>The API for Mnesia to create table schemas is:  </p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">create_schema</span><span class="params">(DiscNodes)</span> -&gt;</span> ok | &#123;error,Reason&#125;</span><br></pre></td></tr></table></figure><p>The <code>DiscNodes</code> parameters should include all <strong>alive</strong> Erlang nodes.  So people, at least me, may wonder how can I know all the node names ahead?  Isn’t a cluster supposed to be dynamic?</p><p>Why not do it in a more natural, lean and agile way instead?  We start only one node at the beginning and gradually add more nodes to form a cluster.  This approach is also applicable even if you know your nodes in advance.</p><h3 id="Mnesia-Startup-Customization"><a href="#Mnesia-Startup-Customization" class="headerlink" title="Mnesia Startup Customization"></a>Mnesia Startup Customization</h3><p>If we include the Mnesia into our Elixir application by putting it into <code>extra_applications</code> like <code>logger</code>, it will startup Mnesia automatically.  But this is not what we want if we have to do some customization and logic before that.</p><p>Instead, we should put it to the <code>included_applications</code> like this:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">application</span></span> <span class="keyword">do</span></span><br><span class="line">  [</span><br><span class="line">    <span class="symbol">extra_applications:</span> [<span class="symbol">:logger</span>],</span><br><span class="line">    <span class="symbol">mod:</span> &#123;Sample.Application, []&#125;,</span><br><span class="line">    <span class="symbol">included_applications:</span> [<span class="symbol">:mnesia</span>]</span><br><span class="line">  ]</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>Then what should we do in the <code>start</code> function of <code>Sample.Application</code> before starting Mnesia up?</p><p>The difference between master node and later-joined child node is that the child knows which master node to refer to.  So, we can use an environment variable to distinguish the behavior during startup.  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> Application</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span></span>(_type, _args) <span class="keyword">do</span></span><br><span class="line">  prepare_mnesia()</span><br><span class="line"></span><br><span class="line">  children = [</span><br><span class="line">    <span class="comment"># Starts a worker by calling: Sample.Worker.start_link(arg)</span></span><br><span class="line">    <span class="comment"># &#123;Sample.Worker, arg&#125;</span></span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># See https://hexdocs.pm/elixir/Supervisor.html</span></span><br><span class="line">  <span class="comment"># for other strategies and supported options</span></span><br><span class="line">  opts = [<span class="symbol">strategy:</span> <span class="symbol">:one_for_one</span>, <span class="symbol">name:</span> Sample.Supervisor]</span><br><span class="line">  Supervisor.start_link(children, opts)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">defp</span> <span class="title">prepare_mnesia</span></span> <span class="keyword">do</span></span><br><span class="line">  master_node = System.get_env(<span class="string">"MASTER_NODE"</span>)</span><br><span class="line"></span><br><span class="line">  if master_node == <span class="keyword">nil</span> <span class="keyword">do</span></span><br><span class="line">    Sample.Mnesia.init_master()</span><br><span class="line">  else</span><br><span class="line">    String.to_atom(master_node)</span><br><span class="line">    |&gt; Sample.Mnesia.add_self_to_cluster</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="Master-Node-Logic"><a href="#Master-Node-Logic" class="headerlink" title="Master Node Logic"></a>Master Node Logic</h3><p>In <code>Sample.Mnesia.init_master</code>, the operations should involve all the steps we listed at the very beginning.</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">Sample.Mnesia</span></span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">alias</span> <span class="symbol">:mnesia</span>, <span class="symbol">as:</span> Mnesia</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">init_master</span></span>() <span class="keyword">do</span></span><br><span class="line">    Mnesia.stop()</span><br><span class="line"></span><br><span class="line">    node_list = [node()]</span><br><span class="line"></span><br><span class="line">    Mnesia.create_schema(node_list)</span><br><span class="line"></span><br><span class="line">    Mnesia.start()</span><br><span class="line"></span><br><span class="line">    Mnesia.create_table(<span class="symbol">:sample</span>, [<span class="symbol">attributes:</span> [<span class="symbol">:id</span>, <span class="symbol">:title</span>, <span class="symbol">:content</span>, <span class="symbol">:tags</span>], <span class="symbol">index:</span> [<span class="symbol">:tags</span>], <span class="symbol">disc_copies:</span> node_list])</span><br><span class="line"></span><br><span class="line">    Mnesia.wait_for_tables([<span class="symbol">:sample</span>], <span class="number">5_000</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><em>Tips:</em> As <code>Mnesia.start()</code> is asynchronous, if we want do have operation on the tables, we should wait for them to be ready.  Function <code>wait_for_tables</code> is for such purpose.</p><h3 id="Client-Node-Logic"><a href="#Client-Node-Logic" class="headerlink" title="Client Node Logic"></a>Client Node Logic</h3><p>What need to be done if we try to add a new node into the cluster?  Let’s directly see the <code>add_self_to_cluster</code> function in <code>Sample.Mnesia</code>.  </p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_self_to_cluster</span></span>(master_node) <span class="keyword">do</span></span><br><span class="line">  Node.connect(master_node)</span><br><span class="line"></span><br><span class="line">  Mnesia.start()</span><br><span class="line"></span><br><span class="line">  <span class="symbol">:rpc</span>.call(master_node, Sample.Mnesia, <span class="symbol">:add_child_to_cluster</span>, [node()])</span><br><span class="line"></span><br><span class="line">  Mnesia.add_table_copy(<span class="symbol">:sample</span>, node(), <span class="symbol">:disc_copies</span>)</span><br><span class="line"></span><br><span class="line">  Mnesia.wait_for_tables([<span class="symbol">:sample</span>], <span class="number">5_000</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_child_to_cluster</span></span>(child_node) <span class="keyword">do</span></span><br><span class="line">  Mnesia.change_config(<span class="symbol">:extra_db_nodes</span>, [child_node])</span><br><span class="line"></span><br><span class="line">  Mnesia.change_table_copy_type(<span class="symbol">:schema</span>, child_node, <span class="symbol">:disc_copies</span>)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><ol><li>Connect the client Erlang node to master.  </li><li>Startup Mnesia locally.  </li><li>Remotely invoke master node’s <code>add_child_to_cluster</code> function:  <ul><li><code>change_config</code> adds the child node into the Mnesia nodes list.  Child node will has a copy of the schema at this point.  </li><li><code>change_table_copy_type</code> changes the schema table type in child node from <code>ram_copies</code> to <code>disc_copies</code>.  </li></ul></li><li>Function <code>add_table_copy</code> makes another copy of the desired table in child node to <code>disc_copies</code>.</li><li>Wait for the table to be ready.</li></ol><p><em>Tips:</em> If the <code>add_table_copy</code> is skipped, but you read the <code>:sample</code> table in child node, it actually goes to the master node to get the data.</p><h2 id="Wrap-Up"><a href="#Wrap-Up" class="headerlink" title="Wrap Up"></a>Wrap Up</h2><p>Above code is simple and some what naive, but it’s easy to have the basic understanding on what needs to be done.  </p><p>After the cluster is formed, when any of the node restarts, you do not need to provide the <code>MASTER_NODE</code> environment variable.  As the schemas and tables are created already, calling the function again will return <code>aborted</code> without harm.  </p><p>During the research, I have googled around and found some powerful library to help form the Elixr/Mnesia clustering more intelligently.  You can take a look at them if you need more fancy features.  </p><p><a href="https://github.com/bitwalker/libcluster" target="_blank" rel="noopener">https://github.com/bitwalker/libcluster</a></p><p><a href="https://github.com/beardedeagle/mnesiac" target="_blank" rel="noopener">https://github.com/beardedeagle/mnesiac</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mnesia is a native, persistent and distributed database in Erlang’s world.  If we want to use Erlang/Elixir to build a fault-tolerance di
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="Distributed" scheme="http://www.thinkingincrowd.me/tags/Distributed/"/>
    
      <category term="Elixir" scheme="http://www.thinkingincrowd.me/tags/Elixir/"/>
    
      <category term="Mnesia" scheme="http://www.thinkingincrowd.me/tags/Mnesia/"/>
    
  </entry>
  
  <entry>
    <title>一个疫情，让我更爱国</title>
    <link href="http://www.thinkingincrowd.me/2020/03/14/pandemic-makes-me-more-patriotic/"/>
    <id>http://www.thinkingincrowd.me/2020/03/14/pandemic-makes-me-more-patriotic/</id>
    <published>2020-03-14T09:53:36.000Z</published>
    <updated>2020-03-15T01:30:12.870Z</updated>
    
    <content type="html"><![CDATA[<p>2020，注定是世界再发生大变局的一年。</p><p>在这里，首先要感谢的是新浪微博，即便我也第一次享受到了禁言 30 天的待遇。但是，肺炎疑似事件和李文亮医生被训诫的消息，我最早就是从微博获取的。这也让我为家里准备到了 10 个基本的口罩。而且，微博上信息的快速流动，虽然传播了一些谣言，但我看到更多的是信息的透明传递，以便于监督，求助和援助。</p><p>从和老婆吵架，决定过年只待在珠海，到已经在家远程工作了好几周的今天，武汉湖北的疫情，全国各地的决策，慈善和援助的行动，国外的应对和民众行为，让我思考了很多。疫情应对真的是科学和人的结合。</p><h2 id="民族习惯"><a href="#民族习惯" class="headerlink" title="民族习惯"></a>民族习惯</h2><p>西方国家，推崇个人自由。不到非不得已，不可能实施封城这样的策略，也很难让民众接受。最开始意大利局部封城，都导致很多人不满，出来示威游行。</p><p>1918年导致全球 2000万人死亡的“西班牙流感”，欧洲强制要求民众带口罩，让大家认为带口罩是疫病的象征。美国当时还大肆反对。欧美的个人习惯是得病了才戴口罩。而我们的所谓保护自己，同时保护他人的想法，西方理解不了。</p><p>况且，国外还有反蒙面法，禁止公共场合遮盖脸部，仅仅露出眼睛。</p><p>而在亚洲，对戴口罩看的比较平常，甚至最近还是一种潮流，接受度比较高。</p><p>所以，结合民族习惯来看，需要肯定的是，在西方国家实施强制性戴口罩和隔离比较困难。</p><h2 id="理论和实践的差异"><a href="#理论和实践的差异" class="headerlink" title="理论和实践的差异"></a>理论和实践的差异</h2><p>顶级医学杂志《柳叶刀》说，没有证据表明，带口罩有助于防止被新冠病毒感染：</p><blockquote><p>there is no evidence that these masks prevent the acquisition of COVID-19, although they might slightly reduce the spread from an infected patient</p></blockquote><p>但是，我认为带口罩是有必要的:  </p><ol><li>不明确新冠是否会气溶胶传播。但当年的 SARS 似乎会。</li><li>不清楚新冠病人潜伏期多长。</li><li>目前病例说明病人在没任何外显征兆的情况下就具备传染性。</li><li>口鼻传播是肯定的。</li></ol><p>相信很多人都看过这个很搞笑又现实的视频。加州公共卫生官员 Sara Cody 刚在视频说完不要用手触摸脸部，然后就用舌头舔手指，翻阅笔记了。</p><p>我们是很习惯，且不经意地用手触碰头脸部的。<strong>知道怎么做，和是否能做到是两回事！</strong></p><p><strong>不能说理论上没法明确口罩不能防止感染，就否认它的积极性。“没有证据显示”这是一种误导。</strong></p><p><img alt="No Evidence is Misleading" src="https://raw.githubusercontent.com/kenspirit/blog-cdn-data/master/no-evidence-is-misleading.png"></p><p>在那么多未知的情况下，口罩是一种阻碍，它减少了意外和不自觉。同时，口罩也是一种信号，可让我们意识到事情的严重性。对外，也减少病毒从患者留出，附着于公共区域。即便很大可能气溶胶传播不存在，那么，我们可以不用抢 N95，可以戴普通，可循环清洁的口罩，甚至一个口罩戴几天，只要小心保护，且不长时间在外。</p><p>所以，我认为现在国内情况稳定，就可以最大可能复工复产，但是依然坚持戴口罩。</p><h2 id="歧视和双标"><a href="#歧视和双标" class="headerlink" title="歧视和双标"></a>歧视和双标</h2><p>把疾病和人，和地区，和种族关联，很容易产生歧视。在国内，歧视外地，歧视湖北武汉，不让外地人进小区等行为都是可耻的。但国外也一样，带口罩的华人在欧洲，在美国被袭击，被刺。以前中国人在意大利被歧视，现在意大利的人逃出来，自己发现也被歧视了。<strong>要承认歧视的存在，并小心翼翼地确保自己不歧视，和保护自己</strong>。</p><p>面对未知、疾病、死亡，恐惧和躲避是人之常情。当时武汉封城前的人逃出来，很多人在骂。但是，想想如果那是你所在的地方，能逃肯定逃。只要逃出来时，注意保护身边的人，做好措施。有时候很难怪他们一开始撒谎，因为他们也知道歧视的存在。但是只要一逃出来马上去医院报道，隔离，我觉得这就尽责了。</p><p>民众歧视，官方则双标。纽约时报这次很好地说明了这一点。中国封城就“反人权”，意大利则“崇高”。</p><p><img alt="NT Double Standard" src="https://raw.githubusercontent.com/kenspirit/blog-cdn-data/master/nt-double-standard.jpg"></p><h2 id="各政府的神操作"><a href="#各政府的神操作" class="headerlink" title="各政府的神操作"></a>各政府的神操作</h2><p>这次疫情中，各国政府对疫情的反应和表现可谓出乎很多人意料之外。</p><h3 id="中国"><a href="#中国" class="headerlink" title="中国"></a>中国</h3><p>国内，无论怎么说，一开始肯定是有地方瞒报的情况，不然不可能三次专家组派驻进场。对李文亮等医护人员警示的训诫和封锁，这两条板上钉钉的懒政和恶行，足以把当地官员翻个遍。还有，封城不果断，资源协调与调配工作的滞后，也可谓让人目瞪口呆。基本上都是慢半拍，甚至是反着来的。</p><p>幸亏中央及时出手，采取强硬措施，火速建方舱医院，调配全国的资源来援助，把猛烈的传染病迅速压制下来。这种执行力，和全国人民的配合措施，真的是放天下应该都不会再有另一个国家可以做到了。中国人民是真的伟大。</p><p>回过头来，很多人看到新加坡的“佛系”，沉稳，就说中国封城的措施太过了，没必要，导致很多中小企业活不下去等。这些人都是事后诸葛。</p><p>要知道，当时我们面临从未见过的病毒，不知道有多久的潜伏期，多大的传染性和致命性。而且，有迹象表明，传染性和致命性都比普通流感高很多，潜伏期又很长，也不明确传播方式。</p><p>在不知道传染的范围有多广，甚至在武汉和湖北可能已经传开了的情况，正值新春人口流动大潮，这个时候不采取强硬的措施是行不通的，因为你面临了太多的未知。如果不做这样的决定，可能后面全国各省，都会导致广泛传播，医疗资源匮乏，全国各省自救都无力了。危险初露，从重处理我觉得是理智的做法，这是为全国公共卫生安全的保障负责。</p><p>这么做了，即使后面发现病毒的传染或致命性不强，那仅牺牲一点经济，也可以很快恢复。可万一赌错了，严重到收拾不过来，对经济会有更大影响，恢复更难，接受更大的骂名。</p><p>当然，情况紧急，封城后对湖北省内资源的调配，市民的生活和医疗照顾，确实有很多地方做得还不到位。这些都是必须在执行强硬措施后不断跟上的。政府需要推出各方面措施，救援各大小企业，困难人士，比如免除一些税，五险一金等。因为这种强硬手段，没有大规模应对先例，而地方政府又不敢贸然做出决定，怕担责，措施就会滞后。向上级部门负责的方式，是值得反思和监督的。</p><p>总体来说，我觉得中央的决策是正确的。地方政府，我们看到有执行的好的地方，也有很多乱象，比如粗暴断路，抵制歧视外地人，暴力执法和禁言等，支持性措施也还不完善。</p><h3 id="新加坡"><a href="#新加坡" class="headerlink" title="新加坡"></a>新加坡</h3><p>新加坡其实并不“佛系”，它的沉稳，我觉得是建立在对病毒的清醒认识，以及严厉的监管措施之上的：</p><ol><li>最早对中国实施旅游禁令的国家之一</li><li>强制暂停大型集会，避免广泛的社区传播</li><li>指定 873 个感冒发热门诊</li><li>严格执行居家隔离，违者严刑峻法</li><li>政府信息公开，避免恐慌</li></ol><p>它的每一起病例，都非常细致地寻找关联和源头。通过严厉的措施，控制扩散，医疗资源也没有那么容易耗竭，最终治愈率也高。所以，它的上升速度慢。</p><p>但是，这也很可能难免有纰漏或意外的。那就是取决于病毒的潜伏性，传播率到底能有多长，多高。如果无症状的潜伏性太厉害，不小心扩散开，那就很麻烦。虽然是在赌，但是政府领导态度明确，重视。</p><p>我刚查了一下<a href="https://experience.arcgis.com/experience/7e30edc490a5441a874f9efe67bd8b89" target="_blank" rel="noopener">新加坡最新情况</a>，在完全没有资源挤兑的情况下，截至三月十四号确诊 200，97 个出院，11 个危重。也就是说，5% 的重症率。但是，从三月六日到十三日，每天确诊人数比前段时间都高很多，每天都 10 个左右，而不是之前的三两个，感觉情况确诊数开始抬头，能不能继续佛系真的要斟酌。</p><h3 id="日本和韩国"><a href="#日本和韩国" class="headerlink" title="日本和韩国"></a>日本和韩国</h3><p>日本比较迷的操作就是让一整船人在上面自己隔离，措施又做得不好。如果可能，我觉得应该强制船上的成员下船，然后马上返回各自国籍所在。日本的国民，则返家或集中统一强制隔离。而不是让整船人在船上滞留，保护措施做得不好，还导致交叉传染。日本国内对新冠病毒的检测，条件要求严格，建议居家隔离，应该也是怕挤兑公共资源。日本感染和确诊数肯定是远远不止当前情况。但是日本目前重症数还没像武汉这样爆发，不知道是时间没到，还是日本人自我要求严格的作风使然。</p><p>韩国政府最迷的是那个新天地教会，故意到处去传染他人。当然，它的会长也被以杀人罪起诉。政府态度强硬，检测也非常迅猛到位，并且实施有监督的居家隔离，所以现在控制的还可以。</p><h3 id="西方"><a href="#西方" class="headerlink" title="西方"></a>西方</h3><p>西方这次疫情比较迷。最令人苦笑不得的操作，当然要数美国。</p><p>美国那边也是最开始对中国实施旅游禁令的国家，所以，让人感觉他们对这个病毒的态度应该是重视，并且觉得值得防范的。可是，特朗普对 COVID-19 却一直持续“流感化”叙述。什么大号流感啦，夏天来了很快就没啦，我们做得很好很全面，数字很快归零等。但是，不断的报道却让人们看到美国 CDC 和地方检测机构的怠慢，检测苛刻，还费用惊人。根据华大 UW 实验室三月十一日的检测，1300例，9%阳性。所以，美国其实感染人数肯定大大超越当前数字的。美国一开始责备中国隐瞒病情，然后严酷处理，侵犯人权，反应过度等。现在自己不也是隐瞒和怠慢？</p><p>欧洲那边呢，一开始也差不多这种策略。意大利有议员带口罩进入议会招群嘲。瑞士同样的场景，议员被逐出会议大厅。到现在，没办法了，则采取躺尸政策了。英国的防疫策略，是让慢慢地让每个人都得病，以获得群体免疫力，然后慢慢拖到夏天。瑞典也宣布“三不”，对疑似和轻症病人不测试、不追踪、不强制隔离，就是把新冠病毒当流感处理，因为国家没有那么多资源。</p><p>不知道那些之前喷武汉湖北官员让轻症者在家自我隔离的人，现在对于英国瑞士的策略是怎么看待这个问题。拖延政策，让疑似患者居家隔离，避免医疗资源挤兑，人群盲目聚集增加感染思路是对的。但是，这必须建立在检测快速完备，人群有清醒的防护意识，知道自己是不是确诊患者的基础上。必须像韩国那样。</p><p>但是，西方这些国家和人民的态度都比较散漫，和不在意。一开始还悠闲的参加集会，甚至不顾禁令坚持邮轮旅行。在患者没有病症就具备传染性的情况下，又没有快速检测和确诊信息，依靠个人自觉自我隔离，减少社交活动显然是不靠谱的。</p><p>当然最不靠谱就是 Trump 一开始各种吹牛B，传递信息错漏百出，初期不控制，慢慢事态严重才开始变强硬。Trump 刚表示自己接受了新冠检测，阴性。其实，刚开始写这篇文章的时候，我就想说：“希望他能感染一下，看看这个和大号流感的区别是什么。” 现在他已经确认没事，我才敢把这话放出来，不然好像太幸灾乐祸了。但是，最讨厌不尊重科学的人。</p><p>意大利就因为采取措施不及时，导致医疗挤兑，可能也因为老龄化，死亡率差不多去到 9%。我们的武汉和湖北的死亡率大概只是 4.5%。非湖北地区的死亡率大概是 0.9%。我对西方采取的软措施相当不乐观。</p><h2 id="国家之间的“友谊”"><a href="#国家之间的“友谊”" class="headerlink" title="国家之间的“友谊”"></a>国家之间的“友谊”</h2><p>国家之间的“友谊”啊，其实也在疫情很好地表现了一把。虽然说国家之间主要还是利益，但是还是看得出来，哪些相对没那么纯粹。</p><p>日本企业，民众自发捐赠口罩，防护服给中国，并留下一些相当美好的诗句：“山川异域，风月同天”，“岂曰无衣，与子同裳”。</p><p>伊朗，在本国资源和力量都不丰足的时候，第一批送达大量口罩，防护罩等援助。</p><p>美国的商务秘书长 Wilbur Ross 一月三十日在 Fox Business 上面说，<a href="https://www.foxbusiness.com/markets/coronavirus-jobs-north-america-wilbur-ross" target="_blank" rel="noopener">新冠病毒可以帮助工作回流北美</a>。如果说以前灯塔国还有点原则，感觉现在就是赤裸裸的利益。</p><p>中国在疫情基本能控制之后，当然马上给予回报。安排专门的队伍，去支援伊拉克，意大利，伊朗。去意大利的队伍中，5位是四川专家，因为当初四川大地震的时候，意大利及时派驻14名专家，救助了 900 多人，还援助修建急救中心。</p><h2 id="唠叨"><a href="#唠叨" class="headerlink" title="唠叨"></a>唠叨</h2><p>说了这么多，只是希望大家看到更全面的一面。突发的传染病，对于任何国家来说，都是一大挑战。一国领导人，政府运作体系都很重要。民族的特点和参与也要充分考虑。</p><p>不要动不动就扯什么主义和政党，哪里都有做的好和不好的地方。双标不要太明显好不好？</p><p>自从上次 HK 事件以来，<a href="http://www.thinkingincrowd.me/2019/10/12/how-I-change-from-angry-youth-to-be-patriot/">灯塔国越来越让我失望</a>。中国也让我看到更多希望。希望这次的疫情，能让中国的民众及素质得到更大的提升，监督政府机构，团结发声。希望中国这篇土地上，勇敢的人越来越多，这才对得起李文亮。学习毛泽东的「论持久战」，坚定信念，对抗敌人。</p><blockquote><p>我认为中国最大的幸运，是生活在这片土地上的人民，总是被他们最勇敢的人保护得很好。<br> —  基辛格</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2020，注定是世界再发生大变局的一年。&lt;/p&gt;
&lt;p&gt;在这里，首先要感谢的是新浪微博，即便我也第一次享受到了禁言 30 天的待遇。但是，肺炎疑似事件和李文亮医生被训诫的消息，我最早就是从微博获取的。这也让我为家里准备到了 10 个基本的口罩。而且，微博上信息的快速流动，虽
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Politics" scheme="http://www.thinkingincrowd.me/tags/Politics/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂 AWS S3</title>
    <link href="http://www.thinkingincrowd.me/2020/03/10/aws-s3/"/>
    <id>http://www.thinkingincrowd.me/2020/03/10/aws-s3/</id>
    <published>2020-03-10T02:16:06.000Z</published>
    <updated>2020-03-14T09:57:17.946Z</updated>
    
    <content type="html"><![CDATA[<p>AWS S3 全名是 Simple Storage Service，简便的存储服务。为什么这么起名啊？它：</p><ol><li>提供了统一的接口 REST/SOAP 来统一访问任何数据</li><li>对 S3 来说，存在里面的数据就是对象名（键），和数据（值）</li><li>不限量，单个文件最高可达 5TB</li><li>高速。每个 bucket 下每秒可达 3500 PUT/COPY/POST/DELETE 或 5500 GET/HEAD 请求</li><li>具备版本，权限控制能力</li><li>具备数据生命周期管理能力</li></ol><p>作为一个对象存储服务，S3 功能真的很完备。如果不用搭梯子，访问快，我还真想过拿它来做自己的网盘。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="Bucket"><a href="#Bucket" class="headerlink" title="Bucket"></a>Bucket</h3><p>要存储数据在 S3 里，首先我们要建立一个 Bucket。Bucket 默认是不公开的。</p><p>Bucket 有几个特点：  </p><ul><li>命名需全球唯一。每个帐号默认可建 100 个，可申请至最多 1000 个</li><li>创建者的拥有权不可转让，也不可以从一个 Region 转去别的 Region</li><li>没有对象存储数量限制</li></ul><p>Bucket 就像是电脑里面的某一个顶层分区。所有的对象都必须保存在某一个 bucket 下面。</p><h3 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h3><p>Bucket 里面每一个存储的数据就是对象，由对象名（键），和数据（值）组成。</p><p>对象的键（Key）可以很长，甚至按照一定前缀格式来指定，从而模拟文件夹的层级结构，比如 <code>Photo/Family/2020-01-25-new-year/altogether.jpg</code>。</p><p>每一个对象其实还包含一些元信息（Meta-data），包括系统指定的文件类型，创建时间，加密算法等，和用户上传时指定的元信息。元信息在对象创建后都无法更改。</p><p>我们也可以为对象指定最多 10个标签（Tag），标签的键和值的最大长度是 128 和 256 个字符。这个标签和元信息有什么不同呢？标签是可以修改和新增的。它最大的好处，是可以结合权限控制，生命周期管理，和数据分析等使用。</p><p>单个文件上传最大是 5GB。超过的话，需要使用 multipart upload API。最大支持 5TB。</p><h3 id="一致性特性"><a href="#一致性特性" class="headerlink" title="一致性特性"></a>一致性特性</h3><p>对程序员来说，这么一个类似数据库的东西，肯定需要关心它的读写特性和一致性模型。</p><ul><li><p>没有锁的功能。如果同时（几乎）发起两个更新对象的 PUT 请求，键相同，那么，以到达 S3 时间先后处理更新。</p></li><li><p>不同对象的更新，没法做到原子操作。</p></li><li><p>对全新的对象来说，它是 Read-after-Write Consistency 的。也就是写了之后马上读，肯定就是你刚才上传的数据。</p></li><li><p>如果你要更新数据，那就变成 Eventual Consistency 了。也就是说，更新后马上读，可能是旧的数据，也可能是新的。</p></li></ul><p>这里有一个比较坑的地方是，如果你先调用 GET 请求访问一个不存在的资源，S3 告诉你它不存在。然后你马上上传数据，再调用一个 GET，这时候是有可能拿不回来的。</p><h2 id="存储级别"><a href="#存储级别" class="headerlink" title="存储级别"></a>存储级别</h2><p>作为一个“云盘”，S3 的好处是可以把你存储的数据，按不同的存储级别来计费。这个存储级别是每个对象不同，上传时指定的。</p><p>我们看看不同的场景，应该选择哪种级别的存储：</p><ol><li><p>经常访问的数据对象</p><ul><li>STANDARD - 这是最普通，最常用的类型</li><li>REDUCED_REDUNDANCY (RRS) - 不建议使用。仅为不重要，可再建数据设计，还有每年平均 0.01% 数据丢失的可能性。</li></ul></li><li><p>按访问频率自动优化的数据</p><ul><li>INTELLIGENT_TIERING - 可以智能地把不热门的数据自动转级别。但是，每个文件最低收费标准是 128KB，存 30天。</li></ul></li><li><p>不经常访问的数据</p><ul><li>STANDARD_IA</li><li>ONEZONE_IA</li></ul><p>AWS 一个 Region，有两到三个 Zone。这两种级别的区别就是，One Zone 的数据就单点保存，丢了就丢了。</p></li><li><p>归档的数据</p><ul><li>S3 Glacier - 最低保存 90天。取出时间 1分钟至 12小时。</li><li>S3 Glacier Deep Archive - 最低保存 180天。默认 12小时内取出。</li></ul></li></ol><p>S3 计费的大头主要是存储容量。但是，S3 还会按照数据获取的次数，和传输容量来计费。越不常访问的级别，虽然存储便宜，但是访问贵。INTELLIGENT_TIERING 还会收监测和管理费用。</p><h3 id="生命周期的管理"><a href="#生命周期的管理" class="headerlink" title="生命周期的管理"></a>生命周期的管理</h3><p>除了手动指定，或者使用 INTELLIGENT_TIERING 外，S3 其实还可以让我们在 bucket 上定义生命周期管理的策略（Policy），来自动转换对象的存储级别。</p><p>生命周期的管理可以做到：</p><ol><li>转换存储级别</li><li>过期删除</li></ol><h2 id="数据安全"><a href="#数据安全" class="headerlink" title="数据安全"></a>数据安全</h2><p>数据安全，是数据存储服务非常重要的一部分。S3 提供了很多方面的功能来保障这一点。</p><h3 id="多版本"><a href="#多版本" class="headerlink" title="多版本"></a>多版本</h3><p>不小心把数据删除了的痛，程序员应该都懂。但是，后悔药是没有的。所以，我们很多时候并不会做永久删除，而是实现软删除的功能。S3 就提供了多版本的功能。只要 bucket 打开了多版本的选项，每次对象的更新都会新加一个版本，而不是覆盖。删除对象，也只是新增一个删除标识。</p><p>当然，你要强行删除特定版本的数据也是可以的，它只是让这件事变得难一些而已。它甚至可以把 bucket 设置成只有通过 MFA 认证的请求才能实现永久删除。</p><p>要注意的是：</p><ol><li>打开版本控制的 bucket，是没法关闭的，顶多可以暂停。也就是说，暂停后的 bucket，新加对象的时候，版本 id 会设为 null。</li><li>无论打开，或者暂停版本控制，对 bucket 内已经存在的对象是没有影响的。</li></ol><h3 id="锁定"><a href="#锁定" class="headerlink" title="锁定"></a>锁定</h3><p>除了使用多版本控制让覆盖或者删除变得更难，S3 还可以锁定特定版本的对象。这种模型被称为 write-once-read-many (WORM)。</p><p>有两种锁定的方式：</p><ul><li>设定保留期限 - 在某固定期限内，对象 WORM。</li><li>法定留存 - 仅当这个留存标识被删除后，对象才能被覆盖或删除。</li></ul><p>一个特定版本的对象，可以同时设置这两种保护，或任意一种。</p><p>因为锁定是针对特定版本的对象，如果你的更改或删除操作请求只根据对象的键，那它还是允许你新增一个版本，或加上删除标识。只是这个锁定，还能防止对象因为生命周期的设置而被删除掉。</p><h3 id="服务端加密"><a href="#服务端加密" class="headerlink" title="服务端加密"></a>服务端加密</h3><p>数据传输过程（in-transit）中的保护，现在基本都由 SSL/TLS 来实现的。AWS 也提供 VPN 或者网络直连服务。</p><p>S3 提供了服务端数据加密的功能，可实现数据的存储（at rest）方面的安全。不过它只支持对称加密，不支持非对称加密。虽然你可以本地把数据加密了再上传到 S3，但是，这需要自己保护好密钥，其实更不容易。</p><p>服务端加密开启后，bucket 内已经存在的对象不会被自动加密。而且，只有数据被加密，元信息（meta data），标签（Tag）不会被加密。</p><p>S3 的服务端加密有三种方式：  </p><ol><li>SSE-S3 - S3 自管理的密钥，使用 AES-256 加密算法。每个对象的密钥不同，并且它还被定期更换的主密钥同时加密。</li><li>SSE-KMS - 密钥存放在 KMS（软硬件结合的密钥管理系统）。</li><li>SSE-C - 在请求时自己提供密钥，S3 只管加解密逻辑和存储。S3 不保存密钥，只保存随机加盐的 HMAC 值来验证今后请求的合法性。</li></ol><p>这里主要说一下 S3 使用 SSE-KMS 特点：</p><ul><li>启用前，如果没有指定客户管理的 CMK（customer master key），S3 会自动创建一个由 AWS 管理的 CMK</li><li>加密数据的密钥，同时也被加密，并和数据保存在一起</li><li>有请求频率限制</li><li>只支持对称密钥</li><li>CMK 必须和 bucket 在同一个区（Region）</li></ul><h3 id="IAM-集成"><a href="#IAM-集成" class="headerlink" title="IAM 集成"></a>IAM 集成</h3><p><a href="http://www.thinkingincrowd.me/2020/02/16/aws-iam/">前一篇文章</a> 详细介绍了 AWS IAM 的功能，S3 当然能根据 IAM 的设置来控制权限。S3 的资源，除了 bucket 和 object 外，还包含了一些子资源。</p><p>Bucket 子资源:</p><ul><li>lifecycle</li><li>website</li><li>versioning</li><li>policy</li><li>cors</li><li>logging</li></ul><p>Object 子资源:</p><ul><li>acl</li><li>restore</li></ul><p>在了解 S3 如何控制权限以前，我们要理解资源的拥有者这个概念。在 S3 里面，资源是谁创建的，它所属的 AWS 帐号，就是这个资源的拥有者。有一种情况是，Bucket 是帐号 A 创建的。但是 A 允许 B 在里面创建对象 X。这个 X 的拥有者是 B 而不是 A。如果资源拥有者授权 A，A 可以把自己的权限委托给自己帐号内的其它人，但不可以再一次跨帐号授权。</p><h3 id="S3-如何验证请求"><a href="#S3-如何验证请求" class="headerlink" title="S3 如何验证请求"></a>S3 如何验证请求</h3><p>当 S3 收到请求时，会经过下面几个步骤验证请求：</p><ol><li>把所有相关的策略（user policy, bucket policy, ACL）集合起来。</li><li><p>根据下面 3 小步，拿出全集中的合适子集来分别验证：</p><ul><li><p>用户范畴<br>如果请求发起者是 IAM User 或 Role，它所属的 aws 帐号就会先检查它是否有权限做这种类型的操作（user policy）。假如刚好要操作的资源（bucket 或 object）属于当前帐号，那么就同时检查相应的 bucket policy, bucket ACL 和 object ACL。</p><p>如果请求发起者不属于 IAM，则跳至下一步。</p></li><li><p>Bucket 范畴<br>S3 会检查拥有 bucket 的 aws 帐号的策略。</p><p>如果操作的是 bucket，那请求的用户需要有 bucket owner 赋予的权限。<br>如果操作的是对象，需要检查 bucket owner 是否有显式 deny 对象的设置。</p></li><li><p>Object 范畴<br>当请求是关于对象的时，最后检查对象 owner 的策略子集。</p></li></ul></li></ol><p>天啊，这看上去好复杂。其实，<strong>和一个小孩想玩玩具一样</strong>：</p><p>首先，小孩必须获得父母的请求，可以玩玩具。然后，看这个玩具拥有者是谁，如果是自己父母，就看这个玩具是否能给孩子玩（比如可能年龄还不合适，超时等）。如果这个玩具是其它人的，那就要还获得其它人的允许。</p><h3 id="不同策略的场景"><a href="#不同策略的场景" class="headerlink" title="不同策略的场景"></a>不同策略的场景</h3><p>对于 S3 验证请求的时候，需要验证的那几种不同的策略，究竟各自的使用场景是什么呢？</p><ul><li><p>Object ACL</p><ul><li>唯一一种管理保存在他人 bucket 里的对象权限的方式</li><li>定义在单个对象级别</li><li>最多包含 100 个授权信息</li></ul></li><li><p>Bucket ACL</p><ul><li>唯一推荐使用的场景是为 S3 Log Delivery 赋予写访问日志的权限</li><li>虽然可以配置跨帐号权限，但仅仅支持有限的设置</li></ul></li><li><p>Bucket Policy</p><ul><li>能给自己帐号内的用户赋权</li><li>支持所有 S3 操作的跨帐号权限设置</li><li>Policy 自身大小不超过 20KB</li></ul></li><li><p>User Policy</p><ul><li>能给自己帐号内的用户赋权</li></ul></li></ul><h2 id="副本备份"><a href="#副本备份" class="headerlink" title="副本备份"></a>副本备份</h2><p>S3 不仅通过多点存储提高健壮性，还提供了自动的异步数据备份的功能。不仅支持同 Region，不同 bucket 的备份，还支持跨 Region，不同帐号的备份。要开启副本备份，首先必须在源和目标 bucket 同时打开多版本的设置。</p><h3 id="为什么要使用？"><a href="#为什么要使用？" class="headerlink" title="为什么要使用？"></a>为什么要使用？</h3><ul><li>备份同时保留元数据</li><li>备份至不同存储级别</li><li>更改备份数据的拥有权</li><li>15 分钟内自动备份</li></ul><h3 id="什么时候跨区备份（CRR）"><a href="#什么时候跨区备份（CRR）" class="headerlink" title="什么时候跨区备份（CRR）"></a>什么时候跨区备份（CRR）</h3><ul><li>满足监管需求</li><li>减少数据传输延时（地域原因）</li><li>提高数据操作的效率</li></ul><h3 id="什么时候同区备份（SRR）"><a href="#什么时候同区备份（SRR）" class="headerlink" title="什么时候同区备份（SRR）"></a>什么时候同区备份（SRR）</h3><ul><li>合并日志</li><li>生产和测试用户间数据同步</li><li>满足数据主权法规</li></ul><h3 id="什么会同步？"><a href="#什么会同步？" class="headerlink" title="什么会同步？"></a>什么会同步？</h3><ul><li>备份配置生效后新建的对象</li><li>没加密的对象</li><li>通过 SSE-S3 或者 SSE-KMS CMK（必须显式启用）加密的对象</li><li>对象元数据</li><li>bucket 拥有者有权读取的对象</li><li>对象 ACL 除非备份同属一个 aws 帐号</li><li>对象标签</li><li>对象的锁信息</li></ul><h3 id="什么不同步？"><a href="#什么不同步？" class="headerlink" title="什么不同步？"></a>什么不同步？</h3><ul><li>备份配置生效前新建的对象</li><li>使用 SSE-C 加密的对象</li><li>保存在 Glacier 或 Glacier Deep Archive 的对象</li><li>bucket 级别子资源的更新</li><li>由于生命周期配置导致的操作</li><li>源 bucket 中本来就是副本的对象</li><li>删除标识</li><li>源 bucket 中被删除的特定版本的对象</li></ul><h2 id="知识小点与周边"><a href="#知识小点与周边" class="headerlink" title="知识小点与周边"></a>知识小点与周边</h2><h3 id="路由请求"><a href="#路由请求" class="headerlink" title="路由请求"></a>路由请求</h3><ul><li>S3 使用的是 DNS 来接收转发请求。如果请求对象的 S3 地址不对，会返回一个临时的重定向。但是对那些 2019 年 3 月 20 日后启用的 Region，地址错误返回的则是 HTTP 400 状态。</li><li>S3 DNS 会按需更新 IP 地址。所以，对那些长期运行的客户端，可能需要采取特殊手段来更新 IP 信息。</li></ul><h3 id="静态资源网站"><a href="#静态资源网站" class="headerlink" title="静态资源网站"></a>静态资源网站</h3><p>S3 的 bucket 可以直接配置为静态资源网站。但是需要结合 CloudFront 才能支持 HTTPS 访问。<br>请求者付费的 bucket，不允许设置为静态网站。</p><p>CloudFront 数据的分发支持两种类型：</p><ul><li>Web Distribution</li><li>RTMP</li></ul><h3 id="Storage-Gateway"><a href="#Storage-Gateway" class="headerlink" title="Storage Gateway"></a>Storage Gateway</h3><p>当你本地服务器想要访问 AWS S3 的时候，除了 API，AWS 还提供了几种网关可供使用：</p><ul><li>File Gateway - 像访问文件或者共享文件那样访问 S3 资源</li><li>Volume Gateway - 通过 iSCSI 设备的方式连接。细分为两种：<ol><li>Stored Volumes - 所有数据都保存在本地，但是能异步备份到 S3</li><li>Cached Volumes - 所有的数据都保存到 S3，本地只存放经常访问的数据</li></ol></li><li>Tape Gateway - 模拟磁带访问的网关，数据异步备份到 S3 Glacier 或 Glacier Deep Archive</li></ul><h3 id="Athena-和-Macie"><a href="#Athena-和-Macie" class="headerlink" title="Athena 和 Macie"></a>Athena 和 Macie</h3><p>Athena 是交互式的查询服务，无须部署。可使用 SQL 来查询 S3 数据。支持的数据格式包括：CSV，JSON，Apache Parquet。</p><p>Macie 是一种可通过 NLP 和 ML 来协助你发现，分类和保护敏感数据的服务。它可以扫描 S3 中的数据，看是否包含 PII（Personally Identifiable Information）或者涉及版权的数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;AWS S3 全名是 Simple Storage Service，简便的存储服务。为什么这么起名啊？它：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提供了统一的接口 REST/SOAP 来统一访问任何数据&lt;/li&gt;
&lt;li&gt;对 S3 来说，存在里面的数据就是对象名（键），和数据（值）&lt;/
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="AWS" scheme="http://www.thinkingincrowd.me/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>一文读懂 AWS IAM</title>
    <link href="http://www.thinkingincrowd.me/2020/02/16/aws-iam/"/>
    <id>http://www.thinkingincrowd.me/2020/02/16/aws-iam/</id>
    <published>2020-02-16T14:46:27.000Z</published>
    <updated>2020-03-09T12:20:36.757Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h2><p>IAM 是 AWS 云平台中负责身份认证，和权限控制的服务。AWS 云虽然分了很多个区（Region），但 IAM 是 Global，全局的。<br>所以，它的数据和配置的更改，也是 Eventually Consistent 的。</p><h2 id="Best-Practices"><a href="#Best-Practices" class="headerlink" title="Best Practices"></a>Best Practices</h2><p>在讲 IAM 的权限控制是怎么工作之前，先强调两个最重要的安全理念。</p><p><strong>Grant Least Privilege</strong></p><p>在 AWS 里面，每一个用户默认都是没有任何权限的。他甚至不能查看自己的密码或 access key，丢失了也只能重新生成。</p><p><strong>Lock Away Your AWS Account Root User</strong></p><p>AWS 账户开通的时候，你的登录邮箱和密码，就成为了这个账户下的超级管理员，它默认是什么都可以干的。<br>所以，和在 Linux 下不要滥用 root 一样，不要用这个超级帐号做日常操作，而是创建一个有 Full Administrator 权限的用户。</p><h2 id="How-It-Works"><a href="#How-It-Works" class="headerlink" title="How It Works?"></a>How It Works?</h2><p>权限控制有两个基本概念：</p><ol><li><strong>Authentication</strong> - 确认是否为有效用户，是否允许登录/接入</li><li><strong>Authorization</strong> - 确认用户当前请求的操作（读写资源），是否合法</li></ol><p>所以，IAM 最重要就是管理 Identity，和控制 Resource 的操作。</p><h3 id="Identity-Principal"><a href="#Identity-Principal" class="headerlink" title="Identity/Principal"></a>Identity/Principal</h3><p>从资源访问的角度来看，使用 AWS 资源的其实不单单是具体的人，还可能是 Application。所以，AWS 里面的身份，分几种：</p><ul><li>User</li><li>Application</li><li>Federated User</li><li>Role</li></ul><p>能在 AWS IAM 控制台里创建的，只有 User 和 Role。而 User 在创建的时候，可以指定它的访问类型。是凭借用户名密码在 Console 登录，还是使用 Access Key ID 及 Secret 通过 API 来访问，还是两者皆可。</p><p>要特别注意的是，User 是直接操作 AWS 资源的用户，而不是你自己开发并部署在 AWS 的系统里面的用户。IAM 的 User 是有数量限制的，最多 5000 个。</p><p>如果你开发的系统需要操作 AWS 资源，比如说上传文件到 S3，那你需要用的是 Federated User。通过 OpenID Connect（如 Google/Facebook）或者 SAML 2.0（如 Microsoft AD），你的系统用户可以在登录后换取代表某个 AWS Role 的临时 token 来访问 AWS 资源。</p><h3 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h3><p>访问和使用 AWS 资源有两种方式，一种是通过页面登录，也就是 Console。一种是通过 AWS API，也就是接口，包括 CLI, SDK 或 HTTPS 请求。</p><p>IAM User 在 Console 页面登录需要提供 AWS 帐号名，IAM User 名和密码。AWS 帐号名是 AWS 云服务开通时，系统生成的一串数字，或者是你赋予的别名。它其实就是一个多租户系统里面的租户帐号。<br> AWS 还会为每个帐号提供一个独特的登录链接，比如我的测试帐号： <a href="https://kcawsfree.signin.aws.amazon.com/console" target="_blank" rel="noopener">https://kcawsfree.signin.aws.amazon.com/console</a> 。<code>kcawsfree</code> 就是我帐号的别名。</p><p>而如果是使用 API 访问 AWS，我们是需要用 IAM User 的 Access Key ID 及 Secret 来为这个 HTTP 请求生成签名的。为请求签名，是大多数的 API 集成的一种安全性考量。微信，支付宝等平台都这么做。为什么呢？  </p><ol><li>确认请求发起方是合法的，就是确保你就是你。</li><li>保护数据传输过程的安全，就是确保数据没被篡改。</li><li>防止重放攻击，就是确保一个请求不被多次使用，滥用或者冒用。</li></ol><p>签名需要根据什么信息生成呢？可以说是包含了请求唯一性的所有信息：  </p><p>请求的接口版本号<br>请求的操作是什么（Action）<br>请求的日期<br>所有请求的参数等</p><p>AWS 的请求样例：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://iam.amazonaws.com/?Action=AddUserToGroup</span><br><span class="line">&amp;GroupName=Managers</span><br><span class="line">&amp;UserName=Bob</span><br><span class="line">&amp;Version=2010-05-08</span><br><span class="line">&amp;AUTHPARAMS</span><br></pre></td></tr></table></figure><p>其实，如果你是使用 AWS SDK 或者 CLI，它会根据你配置的 Access Key 自动签名。只有当你自己发起一个 HTTP 请求的时候，才需要自己实现签名的逻辑。</p><h3 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h3><p>所谓是否有足够的权限，就是验证以下三者在一个请求的场景下，是否被允许：</p><ol><li>主体（Identity）</li><li>操作（Action）</li><li>资源（Resource）</li></ol><p>AWS 是通过策略（Policy）来定义权限（Permissions）的。最基本的策略有两大类。一种是 Identity-based policy，另一种是 Resource-based policy。前一种挂在 User/Role/Group 上面，用以定义这些被挂载的主体，能对什么资源进行怎样的操作。而后一种直接挂载在 AWS 资源上面，用以定义哪些主体可以对这个资源做什么样的操作。</p><p>AWS Policy 的 Permissions 定义，在内部是通过一个 JSON 格式来表示的。我们来看一个样例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"Version"</span>: <span class="string">"2012-10-17"</span>,</span><br><span class="line">  <span class="attr">"Statement"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">"ListAndDescribe"</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"dynamodb:List*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Describe*"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Resource"</span>: <span class="string">"*"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">"SpecificTable"</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"dynamodb:BatchGet*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Get*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Query"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Scan"</span>,</span><br><span class="line">        <span class="string">"dynamodb:BatchWrite*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Delete*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:Update*"</span>,</span><br><span class="line">        <span class="string">"dynamodb:PutItem"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Resource"</span>: <span class="string">"arn:aws:dynamodb:*:*:table/MyTable"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">"AllowAllActionsForEC2"</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Allow"</span>,</span><br><span class="line">      <span class="attr">"Action"</span>: <span class="string">"ec2:*"</span>,</span><br><span class="line">      <span class="attr">"Resource"</span>: <span class="string">"*"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Sid"</span>: <span class="string">"DenyStopAndTerminateWhenMFAIsNotPresent"</span>,</span><br><span class="line">      <span class="attr">"Effect"</span>: <span class="string">"Deny"</span>,</span><br><span class="line">      <span class="attr">"Action"</span>: [</span><br><span class="line">        <span class="string">"ec2:StopInstances"</span>,</span><br><span class="line">        <span class="string">"ec2:TerminateInstances"</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">"Resource"</span>: <span class="string">"*"</span>,</span><br><span class="line">      <span class="attr">"Condition"</span>: &#123;</span><br><span class="line">        <span class="attr">"BoolIfExists"</span>: &#123;</span><br><span class="line">          <span class="attr">"aws:MultiFactorAuthPresent"</span>: <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个策略控制了 DynamoDB 和 EC2 的访问权限。它看起来很复杂，但其实结构很清晰。这里面最主要的元素就是 <code>Effect</code>, <code>Action</code>, 和 <code>Resource</code>。它们确定了什么资源上的哪些操作，是被允许，还是禁止的。它们是 AND 的逻辑组合。</p><p>Statement 里前两个 Permission，允许用户获取 DynamoDB 里面的资源信息，但是只有 MyTable 这个表能做写操作。而后两部分允许用户对 EC2 做任何操作，但是停止和结束 Instance 则必须通过了 MFA 登录认证后才可以。</p><h3 id="Policy-Evaluation-Logic"><a href="#Policy-Evaluation-Logic" class="headerlink" title="Policy Evaluation Logic"></a>Policy Evaluation Logic</h3><p>一个用户或者角色主体上，可以拥有多个不同的 Policy。所以，Policy 的权限验证逻辑，可谓相当复杂。<br>在讲验证流程前，我再重复一次 AWS 权限的设计原则，这对流程的理解很重要。</p><ul><li>如果<strong>有显式的 Deny，就禁止</strong>。  </li><li><strong>Grant Least Privilege</strong> 原则。如果没有显式赋予权限，也就是没有任何 Policy 为请求的资源和操作定义了 <code>Allow</code> 权限，那这个主体就没有权限（Implicit Deny）。  </li></ul><p>AWS 对收到的操作请求，会根据以下的流程来判断这个请求的主体是否有操作权限：</p><ol><li>Deny evaluation</li><li>AWS Organizations service control policies (SCP)</li><li>Resource-based policies</li><li>IAM permissions boundaries</li><li>Session policies</li><li>Identity-based policies</li></ol><p>第一步，首先把 2 至 6 里面的所有 policy 的显式 Deny 拿出来。如果当前的请求属于 Deny 的范围，直接禁止操作。这个就是第一个原则。</p><p>第二步到第六步，是具体的 policy。如果该主体有这个类型的 policy 存在，就按照第二个原则处理。如果没有，跳到下一个 policy 类别的检查。</p><p>那么多种的 Policy 类别，为什么是这个排列顺序呢？我是这么理解的：</p><ol><li>Organization SCP 作为组织级别策略，优先级最高。</li><li>Resource-based policy 可以跨帐号赋予权限，级别比后面的高一些。</li><li>Permission Boundary 的作用是提前为用户定义一个最大的权限范围，避免意外打开了权限的情况，所以比后面的级别要高。</li><li>Session policies 是会话级别，允许临时赋予权限，所以比 Identity-based policies 高。</li><li>Identity-based policies 是最稳定的，所以检查放在最后。</li></ol><p>不过，这里有一个特例，就是 Resource-based policy。如果它是 Implicit Deny 的情况，还是会继续后面的检查，不会阻止。<br>还有一个复杂的情况是关于 Session policy 的，这个就不在本文解释了，具体可看<a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session" title="Session Policy" target="_blank" rel="noopener">文档</a>。</p><p>其实，即便逻辑复杂，判断是否有权限还是可以简单地总结为一句话：  </p><p><strong>只有具备显式的 Allow，并且没有显式的 Deny，才有权限。</strong></p><p>或者</p><p><strong>如果没有显式的 Allow，或者有显式的 Deny，就没有权限。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Concept&quot;&gt;&lt;a href=&quot;#Concept&quot; class=&quot;headerlink&quot; title=&quot;Concept&quot;&gt;&lt;/a&gt;Concept&lt;/h2&gt;&lt;p&gt;IAM 是 AWS 云平台中负责身份认证，和权限控制的服务。AWS 云虽然分了很多个区（Region
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="AWS" scheme="http://www.thinkingincrowd.me/tags/AWS/"/>
    
  </entry>
  
  <entry>
    <title>上了云，远程工作就没问题了吗？</title>
    <link href="http://www.thinkingincrowd.me/2020/02/09/Can-remote-working-be-smooth-after-moving-all-to-cloud/"/>
    <id>http://www.thinkingincrowd.me/2020/02/09/Can-remote-working-be-smooth-after-moving-all-to-cloud/</id>
    <published>2020-02-09T02:00:00.000Z</published>
    <updated>2020-02-16T14:46:14.504Z</updated>
    
    <content type="html"><![CDATA[<p>很久以前，我就期望能尝试下远程工作。一种崇尚已久的，更高效，更自由的方式。没想到，这个愿望，在 2020 年开初就因一个从没想到的悲剧而“实现”了。</p><p>这个全民悲剧就不多说了。能看懂 “<strong>能。明白</strong>” 这几个字的，就能体会我的心情。</p><p>最近很多技术公众号都发表了关于远程工作的文章，包含了工具的推荐，和要注意的事项，包括文档协作、视频会议、任务管理、工作协同等。</p><p>其实，我觉得现在欠缺的不是工具。不然，为什么网上还有不少人爆出公司执行远程工作同时，推出了一些幺蛾子政策：全程打开视频摄像头、10分钟内必须回复、每天发日报、估算效率等。</p><p>这些政策的出现，除了所谓的信任问题外，总的来说还是老板担心远程工作会影响效率。</p><p>效率的提高，需要从软硬两方面下手。</p><p>硬件方面，上了云，就减少了 VPN，Remote Desktop 的使用，降低网络卡壳的影响。公众号里介绍的协同工具，其实也算是在硬件方面提供助力为主。</p><p>但是，不是说上了云，什么都在线，效率就上来了。正如武林高手草木皆可为剑，摘叶即可伤人。<strong>工具虽然重要，但主要还是看怎么使用这些工具</strong>。</p><p>决定效率最关键的，还是软的方面，也就是沟通。</p><p>我说的沟通不是单纯地指用了什么通讯工具（邮件还是即时聊天），而是如何协作，如何使用那些协同工具。这些工具的目的就是提升沟通的效率。<strong>软件工程领域，沟通和协作是很多方面的。既有人和人的沟通，更多的是人和机器，系统的沟通</strong>。</p><p>如果有 Code Review，需要喊一嗓子，还是能自动发代码审查请求到模块负责人或者指定人员？</p><p>有多少比例的自动化测试，还是全人工测试？</p><p>通过看板来了解各方进度和项目障碍，还是靠写工作报告，发邮件？</p><p>持续集成环境是否会出问题？开发是否需要跨团队找人解决？</p><p>服务器和网络设置能像 AWS 的 CloudFormation 那样一键部署，还是需要人手几天的配置？</p><p>开发人员需要新服务器或数据库资源，网络接入，环境对接，需要层层审批获取权限，还是能自动化？即便同样使用的都是 AWS。如果使用传统的 RBAC，每为一个新资源赋权都要去改 Role。而使用 ABAC，则能更方便灵活地做权限管理。</p><p>工具用不好就算了。最可笑的是，可能云平台或工具本身已具备灵活的资源申请，权限控制和管理的能力，却被企业以安全的名义（Least Privilege 原则），实则不信任，强加上一些人手的，半自动化的审批流程，或者限制了一些功能。如果用的是被阉割的云平台，则让人啼笑皆非。</p><p>我认为，即便一家软件公司不是完全远程工作的模式，还需要面对面交流，也应该时不时尝试远程工作，来衡量组织内部的协作模式是否高效。</p><p><strong>远程工作应该是一个目标。它是衡量一家软件公司运作是否高效的一个指标</strong>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很久以前，我就期望能尝试下远程工作。一种崇尚已久的，更高效，更自由的方式。没想到，这个愿望，在 2020 年开初就因一个从没想到的悲剧而“实现”了。&lt;/p&gt;
&lt;p&gt;这个全民悲剧就不多说了。能看懂 “&lt;strong&gt;能。明白&lt;/strong&gt;” 这几个字的，就能体会我的心情。
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Productivity" scheme="http://www.thinkingincrowd.me/tags/Productivity/"/>
    
  </entry>
  
  <entry>
    <title>没想到看书也需要勇气</title>
    <link href="http://www.thinkingincrowd.me/2019/11/30/never-thought-one-book-takes-courage-to-read/"/>
    <id>http://www.thinkingincrowd.me/2019/11/30/never-thought-one-book-takes-courage-to-read/</id>
    <published>2019-11-30T10:11:39.000Z</published>
    <updated>2019-11-30T10:12:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>听到”勇气“这个词，你想到的是什么？</p><p>挺身而出的见义勇为者？不畏强权的斗士？还是奋不顾身的创业者？</p><p>你是否觉得勇气都需要在光辉的领域，在这些“大”事才能呈现？只有这样才足以被称为有勇气之人？</p><p>其实不是的。</p><p>对于严重抑郁症患者，能坚持活着，就需要很大的勇气；减肥人士，能毅然拒绝手边的零食炸鸡，也需要勇气。</p><p><strong>我们做的每一个选择，都取决于当时内在的勇气充足与否。</strong></p><p>我在国庆期间第一次读完《被讨厌的勇气》这本书时，忍不住在朋友圈感叹：</p><blockquote><p>被阿德勒种草。这是一本所有人都应该看的书，比任何道德教育更有价值的书。应该从初中起就被列为必读书籍。</p></blockquote><p>年少之时，我讨厌语文，基本没看过任何文学作品，即便是男生标配的武侠小说。除了学习教材或专业类书籍，我会拿来看的“书”，恐怕只剩下漫画了。看完《被讨厌的勇气后》，我忍不住感慨，如果以前能看到这本书，该多好。然而，这么一想，已经有违阿德勒的观点了。</p><p>虽然前面盛赞这本书，但我觉得并不是所有人都能马上接受阿德勒的观点。​你体会一下书中的这两个观点：</p><ol><li>心理创伤并不存在  </li><li><strong>你的不幸，皆是自己“选择”的</strong>  </li></ol><p>很残酷是不是？本来你看心理学书籍就是为了抚慰心灵，现在的你可能已经够伤心困惑的了，但是却还要被正面捅上一刀：“这是你自找的”。</p><p>最开始读这本书时，你可能会有种“没什么事情做不了，只是你自己没有勇气去做而已。”的近乎居高临下，站着说话不腰疼的感觉。书中那个和“禅师”辩论的“青年”，在最开始的辩论过程中，就被经常气得浑身发抖，但又哑口无言。能坚持把书看下来，真的需要点勇气。</p><p>即便我认为，心理创伤还是存在的，像经历残酷战役的军人，或者被暴力虐待过的人患上的 PTSD。而且，我们也不是说想变主动，变勤快，变温和，只要心想，马上就能改变的。但是，书中“禅师”和“青年”的对话，的确能为你提供新的思路和角度，有种豁然开朗的感觉。</p><p><strong>阿德勒心理学主张的是自我决定理论，目的论</strong>。他并不赞同精神分析学派的方式。因为关注过去，挖掘深层原因来解释事物很容易会陷入“决定论”的思维方式。最近流行的“原生家庭”说法，就是被很多人找来的当借口，把自己“无法改变”的责任，推给他人。</p><p>书中给我感触最大的两句话是：  </p><blockquote><p><strong>决定我们自身的不是过去的经历，而是我们自己赋予经历的意义。</strong></p><p><strong>重要的不是被给予了什么，而是如何去利用被给予的东西。</strong></p></blockquote><p>儿时课本中的张海迪，澳大利亚那位天生没有四肢的尼克·胡哲（Nick Vujicic），杭州保姆纵火案的“老婆孩子在天堂”，汶川地震的幸存者，他们经历了别人难以置信的缺失和悲痛，却还能为这些经历赋予了与众不同的意义，继续前行，甚至活出更精彩的人生。</p><p>老实说，换作是我遇到上述的困难，真的未必能克服。不过，只要知道自己还是能有掌控的能力，未来就不缺希望。看过这本书，能为自己充实点勇气，积蓄点动力，为生活带来一丝转变，其实已经值得。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;听到”勇气“这个词，你想到的是什么？&lt;/p&gt;
&lt;p&gt;挺身而出的见义勇为者？不畏强权的斗士？还是奋不顾身的创业者？&lt;/p&gt;
&lt;p&gt;你是否觉得勇气都需要在光辉的领域，在这些“大”事才能呈现？只有这样才足以被称为有勇气之人？&lt;/p&gt;
&lt;p&gt;其实不是的。&lt;/p&gt;
&lt;p&gt;对于严重抑郁
      
    
    </summary>
    
      <category term="Psychology" scheme="http://www.thinkingincrowd.me/categories/Psychology/"/>
    
    
      <category term="Courage" scheme="http://www.thinkingincrowd.me/tags/Courage/"/>
    
  </entry>
  
  <entry>
    <title>我是如何从一个“愤青”变成“亲中”的？</title>
    <link href="http://www.thinkingincrowd.me/2019/10/12/how-I-change-from-angry-youth-to-be-patriot/"/>
    <id>http://www.thinkingincrowd.me/2019/10/12/how-I-change-from-angry-youth-to-be-patriot/</id>
    <published>2019-10-12T00:47:43.000Z</published>
    <updated>2019-10-12T00:56:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/kenspirit/blog-cdn-data/blob/master/truth-over-fact.JPG?raw=true" alt="truth-over-fact">  </p><p>自从香港发生一些示威事件后，我的心情一直无法平复。作为一个会讲标准粤语的广东人，一个大半职业生涯在港资企业，在港工作过一年时间，一个有着好几个香港朋友的人来说，心情真的很不好受。</p><p>很早就想写些什么，但迟迟没有下笔。心情杂乱是一方面，主要原因则是目前这个乱局，谁是谁非，要抓住最开始那个源头，太难了。所以，无论我怎么写，写什么，可能都会招来持对立观点的人一顿攻击。以前流传的一句名言：<strong>“我不同意你的观点，但是我誓死捍卫你说话的权利”</strong>，现在还有多少人能做得到。</p><p>不过，不吐不快。即便可能因此损失一些朋友，但或许对你我也是好事。</p><h3 id="为什么我变了？"><a href="#为什么我变了？" class="headerlink" title="为什么我变了？"></a>为什么我变了？</h3><p>我以前也认为中国的自由民主是不足够的（即便现在还是不足够），特别是言论上，而且还有很多政府不作为行为。所以，我在大学时候，很倾向于出国，希望去到一个更自由的地方。国内有些什么贪腐案件，政府做的不好的地方，我会特别留意并把它拿来当支持自己观点的证据，证明我的想法是对的。</p><p>那为什么我现在变成“亲中”了呢？首先，“亲中”不代表我认为中国什么问题都没有。我依然看到政府还有做的不好的方面。“亲中”只是代表我认同自己是中国人，并且有义务使之变得更好，为了我的后代。</p><p>整个转变，主要是因为我看到了一个现实：“<strong>任何国家政权，都天然维护自己的国家利益，甚至不惜牺牲其它国家民族的利益。一个国家内的媒体机构，绝大多数都是为了国家政权而服务的。</strong>”</p><p>我已经不怎么相信以前崇拜的那些灯塔国，美国等西方国家，会真正为了理想的自由民主，为全世界人民谋福利。很多时候他们的政治宣言，行动等，都只是为了自己的政治生涯和国家利益而已。</p><p>连我一直笃信 “Don’t be evil” 的 Google，其实也会根据很多说不明的利益，更改搜索结果。这个 Motto 后来也被悄悄改成 “Do the right thing” 了。最近在 Facebook 有一个亚裔员工，帮跳楼的中国留学生公开发言，被开除了。</p><p>我不是说中国什么都好，只是不盲目相信国外只有美好。</p><p>帮我打破幻想的，主要是我越来越多地看到，一些西方媒体的报道是如何歪曲事实，来论述它们口中的真相。媒体的观点，取材，绝大多数都是以想让你看到什么，想让你有什么结论的前提来构建的。那是它们口中的真相，其实并不是事实。而所谓的“真相”，往往取决于人的角度和观点。</p><p>下面是一些例子：</p><p><a href="https://weibo.com/1401527553/I3PBNlNkn" target="_blank" rel="noopener">扭曲原话</a><br><a href="https://weibo.com/1401527553/I1n3Of3IU" target="_blank" rel="noopener">选择“真相”而不是“事实”</a><br><a href="https://weibo.com/1401527553/HETZoFBJs" target="_blank" rel="noopener">故事的两面，只看你选择什么来报道</a><br><a href="https://weibo.com/1401527553/I98cf3ARZ" target="_blank" rel="noopener">看似真话，实际误导</a>  </p><p>如果你认为我也是选择符合我观点的证据来服务我的观点，那就对了。我不否认这种可能性。只是，你是不是也想想，自己也是有可能倾向于相信你本来就认定的观点？</p><p>George Orwell 说过:  </p><blockquote><p>“The people will believe what the media tells them they believe”。</p></blockquote><p>人总是相信自己愿意相信的一些观点。所以，两大观点对立的媒体，很容易让你倾向于选择那些和你原来的观点一致的报道，而忽略了另一方即便是事实的报道。</p><h3 id="怎么办？"><a href="#怎么办？" class="headerlink" title="怎么办？"></a>怎么办？</h3><p>这种情况下，我们还能相信什么呢？这时候，我<strong>能坚守的，只能是自己认定的最基本的一些世界观和原则</strong>：</p><ol><li>我不同意你的观点，但是我捍卫你说话的权利。  </li><li>暴力，和伤害他人的正当权益是不可接受的，尤其是不能用一些“伟大”的理由或借口。</li></ol><p>所以，如果你要问我对这次香港示威的基本态度是什么？就是不认同所有的暴力行为。</p><p>即便你有很崇高的理由，也不能使用暴力和伤害他人的正当权益。值得别人尊重的，只有如他们这样：</p><p><a href="https://weibo.com/1401527553/Ia4dJg7xV" target="_blank" rel="noopener">在弗格森枪击案引发的骚乱之后，奥巴马曾公开表示</a></p><p><a href="https://weibo.com/1750070171/IavWJ5x8m" target="_blank" rel="noopener">被英国警方逮捕的极端环保者</a></p><h3 id="为什么示威发展成这样？"><a href="#为什么示威发展成这样？" class="headerlink" title="为什么示威发展成这样？"></a>为什么示威发展成这样？</h3><p>现在，示威的一方，认为是政府警察的错；政府认为是对方的错。现在双方就像争吵红了眼的夫妻双方，不断升级各自的手段，维持各自的情绪和态度，生怕一退缩下来，就输了。这种对称式的升级，只有当一方能突然退出这个循环，或者压倒性的暴力，才可能有打破的机会。但是，无论怎么样，我都不希望是大暴力收场，两败俱伤。</p><p>按示威者所言，他们也是不崇尚暴力，希望和平示威的。那为什么他们要蒙面？为什么他们不制止在游行中实施暴力，打杂破坏的人员？在一些视频里面，一些香港年轻人甚至说，他们使用暴力，进行经济和其它破坏，正是他们的目的。他们说就是要打倒了才能重建。</p><p>我觉得，现在的示威群体，已经专横和偏执化了。任何一点理性的反对意见，已经没法被听进去。</p><p>下面是在《乌合之众》这本出名的大众心理学书里面，关于群体方面的描述。所以，如果在示威群体中提出反驳意见，可能已经被排挤出去了。</p><blockquote><p>群体只知道简单而极端的感情；提供给他们的各种意见、想法和信念，他们或全盘接受，或者一概拒绝，将其视为绝对的真理或绝对谬误。<br>…<br>个人可以接受矛盾，进行讨论，群体是绝对不会这样做的。在公众集会上，演说者哪怕做出最轻微的反驳，立刻就会招来怒吼和粗野的叫骂。<br>…<br>专横和偏执是一切类型的群体的共性</p></blockquote><p>有不少示威人士都认定，那些暴力人士，是警察的奸细。可见，本来属于正义的警察，已经被认定为暴力和群众的对立面。在没有了信任的基础上，可以说你做什么都是错的。他们为什么不会认为，那些就像是港产片里面的卧底，目的只是为了抓获混入和平示威人士的暴力份子呢？只能说，他们已经完全不信任警察了。  </p><p>如果说那些带面罩的暴力人士是非和平示威人士，甚至是警察奸细，而你是和平示威人士。那与之区分的最好的途径，不是脱掉面具吗？甚至在政府颁布反蒙面法后，为什么还公然反抗法律？不蒙面，本来就是和平示威的要求，为什么他们反而不采纳？这也只能说明，他们已经完全不信任政府了。而且，蒙面本身，已经成为了示威这个群体的特征，质疑和反对这个特征，相当于质疑和反对示威的诉求，是不可接受的。</p><h3 id="怎么破？"><a href="#怎么破？" class="headerlink" title="怎么破？"></a>怎么破？</h3><p>最近在看的《Change: Principles of Problem Formulation and Problem Resolution》里面说到，<strong>一些看起来合理的处理问题的手段，其实只是起了短暂解决问题的作用，但是却反而长期维持了问题的存在</strong>。越是坚持采用相似的手段，问题就越难解决。</p><p>现在示威人士和政府双方，感觉都陷入了各自认为对的解决问题的方式上，却反而维持了问题，甚至在恶化。</p><p>在这种情况下，要产生真正的改变，企图追究最开始问题形成的原因来解决问题其实已经没有用了，而是需要观察现在用来解决问题的手段。要判断是否需要从另一个角度或维度上改变当前的手段。正如，如果你一开始失眠，可能只是因为恰巧睡前吃喝了什么，或者近期有什么突发事情。但是，如果你已经持续失眠了几个月，那可能就要观察你一直以来是如何尝试解决失眠的，用了什么方法。因为一开始失眠的原因，已经不再是导致现在持续失眠的原因了。而可能是现在尝试解决失眠的手段，反而维持了失眠的现象。</p><p>所以，如果从改变当前解决失眠的手段入手，比如停止所有尝试入睡的努力，平静的和自己说，既然睡不着了，那就干脆不睡了，做自己想做的事情吧。这样做，其实反而可能可以减轻了自己给自己带来的压力，让你忍不住就产生了睡意，然后睡着了。</p><p><strong>想解决一些顽固的问题，有时可能需要用一种看起来反直觉的，荒谬的手段来解决</strong>。</p><p>假如，政府突然宣布，鉴于大多数人都认同示威行为，并且他们都自认为是和平的示威人士，所以政府不会再派出任何警力去示威地点企图维持秩序，将交由他们自己组织管理。只要不带面罩，就是和平示威。如果真的还有暴力份子存在，请他们注意安全，和暴力份子保持距离。警察如果接到报警，才会出发处理。如果示威群众真的认为有能力阻止暴力的发生，才去制止他们，或者在远处拍照，录像再转交给警方。</p><p>这里创造的悖论就是说：既然你们原来不信任政府和警察，并认为政府干预了正常的示威，那政府就先承认大多数都是和平示威人士，让你们自己内部和少数的暴力份子疏远。把道德高点和责任还给示威人士，让他们自己考虑所有可能面对的情况，并判断什么应对手段是和自己的身份或观点违背的。</p><p>政府还可以让示威人士选出一两个代表，全球直播和政府对话。因为只有一两个人，就没有了群体的疯狂；而且通过全球直播，直接咨询示威代表如何解决那些暴力，侵犯他人权益的行为，解决冲突，把一部分外部矛盾转化为内部。</p><h3 id="未来会如何？"><a href="#未来会如何？" class="headerlink" title="未来会如何？"></a>未来会如何？</h3><p>我其实一直觉得，香港作为一个在中国内具备特殊地位，更多自由度的地区，它的一个伟大的使命是充分发挥它的影响力，软实力，慢慢辐射广东，华南，甚至全国，让中国变得更美好，民主和自由。但是，这次的示威，似乎起了反效果，感觉有点可惜。不知道经此一役，香港的未来会如何。毕竟，这次的蝴蝶效应，竟然是一个香港人在台湾杀了人，导致大陆看不到 NBA，炒鞋的凉了。</p><p>正如前面所说，我对外媒也是越来越鄙视，玩的双标也越来越多，越来越不靠谱（参见下面对“莫顿叉”这个解释）。最近国外那些环保人士示威，虽然没有暴力行为，但是也采用很多严重影响社会和他人利益的方式来表达。顿时感觉整个人类社会，辛苦建立的文明，怎么那么快，那么突然就堕落了。乌合之众啊，人类的理性实在是太脆弱了。</p><p><img src="https://github.com/kenspirit/blog-cdn-data/blob/master/Morton&#39;s%20fork.jpg?raw=true" alt="Morton&#39;s fork">  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://github.com/kenspirit/blog-cdn-data/blob/master/truth-over-fact.JPG?raw=true&quot; alt=&quot;truth-over-fact&quot;&gt;  &lt;/p&gt;
&lt;p&gt;自从香港发生一些示威
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Politics" scheme="http://www.thinkingincrowd.me/tags/Politics/"/>
    
  </entry>
  
  <entry>
    <title>有时候，你对下属，比对自己的孩子还要好</title>
    <link href="http://www.thinkingincrowd.me/2019/08/02/sometimes-you-treat-your-subordinates-better-than-your-child/"/>
    <id>http://www.thinkingincrowd.me/2019/08/02/sometimes-you-treat-your-subordinates-better-than-your-child/</id>
    <published>2019-08-02T13:32:41.000Z</published>
    <updated>2019-08-02T13:32:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚上完了一个系统养育的线上课程，又紧接着参加了公司安排的一个两天的「优秀导师」培训。突然间发现，我们很多做家长的，对自己的下属，甚至比对自己的孩子或至亲还要好。</p><h3 id="你是-Boss-还是-Leader？"><a href="#你是-Boss-还是-Leader？" class="headerlink" title="你是 Boss 还是 Leader？"></a>你是 Boss 还是 Leader？</h3><p>大家可能看过类似的比较：  </p><p>Boss 使用权威；Leader 使用领导力。<br>Boss 制造畏惧；Leader 制造吸引力。<br>Boss 喜欢惩罚；Leader 喜欢指导。<br>Boss 绩效导向；Leader 发展导向。<br>Boss 喜欢控制和命令；Leader 喜欢引导和鼓励。  </p><p>很多人都会说：“我们更喜欢 Leader，而不是 Boss”。  </p><p>可是，我们在面对孩子的时候，是像 Boss 多一些，还是 Leader 多一些？</p><h3 id="你有用心去建立关系吗？"><a href="#你有用心去建立关系吗？" class="headerlink" title="你有用心去建立关系吗？"></a>你有用心去建立关系吗？</h3><p>一个成功的导师，带教新人的第一步是什么？建立关系和信任。</p><p>想想我们会为了和下属打好关系，帮助他们成长，我们做过什么？我们请 Ta 吃饭；花心思花时间来单独指导；当 Ta 遇到困难时，甚至还能共情地提问和引导，了解 Ta 真实的想法；我们察言观色，判断下属是否有抗拒心理，然后再想办法灵活应对。</p><p>可对着孩子，我们又做了多少？我们花过多少心思和孩子建立关系？还是我们默认拥有了父母的角色，就不需要用心去经营这段关系了？</p><h3 id="你违反了多少指导的原则？"><a href="#你违反了多少指导的原则？" class="headerlink" title="你违反了多少指导的原则？"></a>你违反了多少指导的原则？</h3><p><strong>表扬要公开，批评要私下</strong></p><p>  多少家长在饭桌上，在外人面前，在众目睽睽下批评自己的孩子。</p><p><strong>给出明确具体的指示</strong></p><p>  想像一下，老板对你说：”你写得这都是什么狗屎？重新写一遍！“ 你觉得这样的回应对你有帮助吗？但是，如果他说的是：”这里写的太笼统，你可以加一些具体的案例，数字，突出重点。“，你又有什么感觉？平时对待你的下属，指导你的孩子，你多数用的是哪种方式？  </p><p><strong>对事不对人</strong></p><p>  ”你怎么这么笨啊？“ ”你怎么一点上进心都没有？“ ”你看看某某做的比你好多少？“<br>  这些伤自尊的话，可能你对孩子说过不少吧？给 Ta 贴了多少标签？​可你对你的下属说过吗？为什么你会懂得给你下属面子？</p><h3 id="你是否期待-Ta-马上就变好？"><a href="#你是否期待-Ta-马上就变好？" class="headerlink" title="你是否期待 Ta 马上就变好？"></a>你是否期待 Ta 马上就变好？</h3><p>指导下属的时候，我们知道有时候难免要手把手教。还知道不可能一步到位，会帮他把目标进行分解，慢慢改进。我们还能认识到，不同的人有不同的特长，成长速度也不同，并针对他们的优缺点来安排任务。</p><p>可是对孩子呢？我们期望 Ta 一下子就能端端正正地坐上 45 分钟做作业不开小差。我们理所当然地认为孩子到了多少岁了，就应当具备了某种技能。还拿 Ta 和其他人比较，质问 Ta 为什么做不到。</p><p>在公司培训后回家的路上，我和另一位妈妈对养育问题都有了很大的感慨。之前还自认为自己做的应该可以了，在面对孩子的缺点和不足时，已经很耐心地去引导孩子，和给予意见。可现实却是大大地打脸。</p><p>她回想起自己教儿子练字时给予的那些回应，恰恰印证了培训老师教的方法。</p><p>她儿子的字写得很潦草，所以一直要求他练字。但是，她儿子一直非常抗拒。一开始她给的反馈就是：”你怎么写得这么乱？就不能整洁一些吗？“ 可是无论怎么说，都没有效果。后来，她给孩子的反馈变了：“你写的字，至少要在方块格子里面吧？我们的中文字是方块字，你写的这些有哪些可以算是方块的样子呢？” 这些改变了的反馈虽然可能还不算完美，但是，他儿子写的字竟然就慢慢变好了。更神奇的是，他儿子对练字的态度也都改变了，还会主动邀请她，看看自己的字写得怎么样。</p><p>其实，真的，<strong>”没有教不好的孩子，只有不会教的父母“</strong>。</p><p><strong>”养育孩子，其实养育的是自己“</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚刚上完了一个系统养育的线上课程，又紧接着参加了公司安排的一个两天的「优秀导师」培训。突然间发现，我们很多做家长的，对自己的下属，甚至比对自己的孩子或至亲还要好。&lt;/p&gt;
&lt;h3 id=&quot;你是-Boss-还是-Leader？&quot;&gt;&lt;a href=&quot;#你是-Boss-还是-Le
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Education" scheme="http://www.thinkingincrowd.me/tags/Education/"/>
    
      <category term="Coach" scheme="http://www.thinkingincrowd.me/tags/Coach/"/>
    
  </entry>
  
  <entry>
    <title>福尔摩斯爸爸和华生妈妈</title>
    <link href="http://www.thinkingincrowd.me/2019/06/25/holmes-dad-and-watson-mom/"/>
    <id>http://www.thinkingincrowd.me/2019/06/25/holmes-dad-and-watson-mom/</id>
    <published>2019-06-25T14:55:06.000Z</published>
    <updated>2019-06-25T15:00:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>在美剧 Elementary（福尔摩斯）第 5 季里面，Joan Watson 遇到了她当医生时救过的一位贩毒黑帮人员 Shinwell Johnson。Shinwell 在假释期间，表达了对生活的悲观情绪和想重新做人的意愿，Joan 也为他提供了很多帮助。可因为 Shinwell 一直不被社会接纳，Joan 提议跟她学做侦探。Shinwell 觉得自己并不合适，谢绝了她的提议。而 Sherlock Holmes 其实也同样觉得他没潜质。  </p><p>后来 Joan 知道他重新接触黑帮，找他沟通，反而被 Shinwell 怒斥，劝她别多管闲事，并让她从此远离自己。虽然 Joann 有点无奈，但她始终觉得 Shinwell 并没真正变坏。后来，他们发现 Shinwell 是在帮 FBI 在黑帮内做线人。可是这个 FBI 职员并没登记他为正式线人，而只是利用他的信息来抢劫黑帮，最后还嫁祸他杀人。幸亏 Holmes 最终揭露了对方的阴谋，并帮 Shinwell 擦去了凶器上的指纹，他才免去了牢狱之灾。  </p><p>Shinwell 想重新打入黑帮，帮警察做线人，是因为他在监狱内看到不断有他的后来者入狱，他想改变这一切。可是 Holmes 一直不赞成，也认为他没有足够的能力，还尝试说服警察那边不要接纳他，并派人跟踪他。不过，到了最后，Holmes 终于接受了他，并教他当线人的一些必要技能。</p><p>虽说这个剧情是成人之间的侦探类故事，可是却颇有父母和子女相处的影子。  </p><h3 id="给-Ta-我认为好的"><a href="#给-Ta-我认为好的" class="headerlink" title="给 Ta 我认为好的"></a>给 Ta 我认为好的</h3><p>Joan 一开始看到 Shinwell 需要帮助时，她尽自己最大的能力，并把自己认为是最好的东西（做侦探）教给他。我们当父母的，也习惯于把自己经历过的事情，对好坏优劣的判断，教给下一代。这种可能带着血一般痛苦教训的经验，大部分情况下是避免子女走弯路的好事。</p><p>但是，有时对方未必会这么认为，尤其在叛逆期的孩子，或者 Ta 认为你的指导某程度上是贬低 Ta 的时候。</p><p>Holmes 自认为（当然大多数情况确实是）他的智商和判断能力，是碾压很多普通人的，所以他经常非常直言并很没有礼貌地对他人做出指点。大多数的父母，当然也觉得自己的经验和智商都是碾压自己的子女，因为他们还是孩子嘛。所以，他们很常单方面根据自己的判断，决定某些事情是否适合于对方。</p><h3 id="好意被拒绝"><a href="#好意被拒绝" class="headerlink" title="好意被拒绝"></a>好意被拒绝</h3><p>而当你的好意或建议被拒绝，你关心的人看似朝你觉得错误的方向走时，你会怎么办？很多人可能说出类似的气话：  </p><p>“我真是懒得理你了！“<br>”所谓’不听老人言，吃亏在眼前‘，出事了不要来找我！“<br>“你怎么这么倔！”<br>“你不 xxx 就不要认我作老爸！”</p><p>Holmes 得知 Joan 协助 Shinwell 联系警察，登记做正式线人后，则单方面尝试阻碍事情的发生。这其实和有些父母很像。在孩子不认可自己的意见，坚持自己的做法时，有些父母会自作主张地帮对方决定，甚至寻找相关方加以阻挠。</p><p>如果父母靠的是强行灌输意志的方式，来给孩子传承经验和给予指导，很可能会遭遇反弹。并且，或许也会因此抹杀了 Ta 的体验感，破坏 Ta 对自我能力做判断，做决定，和承担相应后果的能力。再说，我们认为的好与坏，未必适用于孩子，未必适应未来社会。</p><p>那我们该怎么做呢？</p><h3 id="妥协后的全力支持"><a href="#妥协后的全力支持" class="headerlink" title="妥协后的全力支持"></a>妥协后的全力支持</h3><p>Shinwell 怒斥 Joan 离开时，Joan 并没有过多斥责，只是表达出我依然关心你，有什么事情随时来找我的态度。  </p><p>Holmes 最后做的，也是值得我们学习的：<strong>明知道对方的决定不是自己认同的方向，但还是尽量协助 Ta，提升 Ta 的能力以更适合向那个方向发展。</strong> 这才能算得上是全心全意的支持。</p><p>现在，很多父母都会说：“我对小孩子没什么要求，只要 Ta 能照顾好自己，找到自己的兴趣，以后想做什么就做什么。”</p><p>这种说辞看起来相当体谅自己的孩子，似乎背后充满了无限的支持。可是，真正落实到生活上，做的和说的就不太一样的：自作主张地报一堆学习班；或者常说 “你看 XXX 的语文/数学/英语/科学/政治为什么就那么高分，你怎么才 80 多？”。有多少父母可以接受得了孩子哪怕一点点偏科？他们既要孩子全面发展，又希望 Ta 能有某些特长。我们经常感叹别人家的孩子怎么从小在某些领域就那么厉害，可是自己又有多大的勇气和精力去支持自己的孩子做 Ta 喜欢的事情？  </p><p>“Ta 还小，还没成年，并不知道好和坏，也不知道现在应该做什么。” 这是无数家长的理由，同样也是在一些时候束缚着我的枷锁。在哪些方面可以尊重孩子的选择，哪些应该家长强制要求，我也把握的还不好。<strong>可要到孩子多少岁了，我们才会认为 Ta 可以自己做决定，尊重 Ta 的选择了呢？这个问题值得每位父母思考。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在美剧 Elementary（福尔摩斯）第 5 季里面，Joan Watson 遇到了她当医生时救过的一位贩毒黑帮人员 Shinwell Johnson。Shinwell 在假释期间，表达了对生活的悲观情绪和想重新做人的意愿，Joan 也为他提供了很多帮助。可因为 Shin
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Support" scheme="http://www.thinkingincrowd.me/tags/Support/"/>
    
  </entry>
  
  <entry>
    <title>你制定的规则未必比 996 要强</title>
    <link href="http://www.thinkingincrowd.me/2019/06/02/the-rules-you-made-might-not-be-better-than-996/"/>
    <id>http://www.thinkingincrowd.me/2019/06/02/the-rules-you-made-might-not-be-better-than-996/</id>
    <published>2019-06-02T13:04:18.000Z</published>
    <updated>2019-06-02T13:48:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>小时候，我们觉得自己要遵守大人和社会制定的各种规则，实在是太不自由了。<br>长大后，当需要为别人制定规则时，你可能会发现这是更令人头疼的事情。</p><p>这怎么可能，制定规则还不简单吗？是啊，你定你的规则，没人拦着你。</p><p>可你凭什么让别人遵守？甚至你本人都未必能遵守自己定下来的规则吧？</p><p>我家那个娃，不像我以前那么“听话”，为了让他遵守一些约定，可是伤透了我们夫妻俩脑筋，还经常为此吵架争论。</p><p>一般来讲，规则是围绕着某些特定的原则来制定的。如果违背了规则或约定，相应会有要承担的后果（一般来说应当是不作为的直接后果）。如何制定规则，以及选择什么样的后果或惩罚措施能凑效并促使对方以后能尽量遵守是非常困难的。</p><p>举几个最简单，但又最头疼的事情给你体会一下。</p><h3 id="吃饭"><a href="#吃饭" class="headerlink" title="吃饭"></a>吃饭</h3><p>你觉得吃饭的原则有哪些？那些什么手要端碗，吃干净等琐碎的点就不说了，最基本的应该有这些吧：</p><ol><li>菜上了桌，所有人都应当入席</li><li>等人齐了，才能动碗筷</li><li>按需装盛，不强占，不浪费</li></ol><p>如果当你上了菜，叫孩子过来吃饭的时候，他还沉迷于某个东西，或者说：“不，我等会再吃。”？Ta 算违反了第一条规则吗？你的反应会是怎样？你需要看 Ta 当前在忙什么才做出决定吗？  </p><ul><li>如果 Ta 在做作业？  </li><li>如果 Ta 在看书？  </li><li>如果 Ta 在拼乐高或积木？  </li><li>如果 Ta 在看电视？  </li><li>如果 Ta 在玩手机？  </li></ul><p>到哪一个你就无法忍了？是否违反了第一条规则和 Ta 正在做什么有关系吗？是不是某些事情就情有可原？为什么呢？和你判断 Ta 正在做的事情是否有意义有关？谁有资格做出这个判断呢？  </p><p>好，不管 Ta 现在做的是什么，你已经认定了 Ta 违反了规则一，那你会采取什么措施让 Ta 知道这个原则必须遵守？或者打算让 Ta 承担什么后果？  </p><ul><li>强行中止 Ta 目前的行动  </li><li>放狠话：“现在不来就别吃了！”  </li><li>打一顿  </li><li>说：“最后吃完的洗碗”  </li></ul><p>对我来说，虽然到了最后两个我就觉得不是正当理由，但我基本是无论儿子在做什么，都会要求按时吃饭，因为要规律饮食。所以，我可以容忍一两分钟，毕竟有可能手上的事到了最后关头啥的。所以，我会说的是：“你最后吃完，就负责洗自己的那个碗和装菜盘子”。他一般都会马上过来因为他不喜欢洗碗。但是，老婆说这个做法没法让他体会第一个规则的意义，就是饭桌礼仪。你们觉得有什么更好的办法，兼顾两者呢？</p><h3 id="睡觉"><a href="#睡觉" class="headerlink" title="睡觉"></a>睡觉</h3><p>按时睡觉对我儿子来说也是老大难问题。他睡眠时间一直不太够，偶尔晚饭后就要在沙发那里睡那么一会。但是他老是很早起来，晚上又不喜欢早睡。以前如果不禁止他早起后看电视，还能更早。</p><p>我们对于睡觉的原则是：“小朋友要有 10 小时左右的睡眠时间。”，所以，我们定的规则就是 9 点半前所有事情都必须完成。那么，我们给予的半小时玩游戏的奖励，也就意味着 9 点前必须完成所有的作业，洗澡等。</p><p>但是，他总能找到拖延睡觉的方式，比如 9 点半后开始吃宵夜。这个我觉得他是知道我们在这方面不会怎么拦他，而且这时候我们也会趁机要求他吃水果。</p><p>所以，这点上我都没什么好措施，也想不到什么好的后果来让他承担，从而促使他改变。</p><h3 id="做作业"><a href="#做作业" class="headerlink" title="做作业"></a>做作业</h3><p>你们觉得这方面的原则是什么呢？至少应该有这两点吧。  </p><ul><li>独立完成</li><li>按时按质按量完成</li></ul><p>为了达成目标，要把规则制定成“不完成作业前不能去玩”吗？感觉又不太人性化，上了一天课，放学后应当可以轻松一下。我们也希望能让儿子有运动锻炼，晒晒太阳的时间。</p><p>可是，要他回头按约定的时间回家做作业就头都大了，老是不守约定，玩了就不愿意回来了。回到家后问作业多不多，他就说不多。但是又经常拖拉到深夜，尤其是有语文阅读或作文的时候。</p><p>所以，要如何制定规则和违规后的惩罚呢？任由他给老师点名，罚抄之类吗？不是不行，但不是每个小孩都受，有些可能越罚越反叛。而且，我在上篇「<a href="http://www.thinkingincrowd.me/2019/05/21/call-for-parent/">叫你的家长来！</a>」的文章也说过，很多老师最后其实是把球踢回给家长而已。  </p><p>如果最后变成要我们在边上监督他，那就违背了原则一，依赖惯了怎么办？如果完全让他自主安排时间，却又经常拖到最后才做。他怎么就不能像我小时候那么听话，先把作业做完，然后才去没后顾之忧地玩呢？感觉他就似乎有所谓的拖延症那样。（虽然李松蔚老师说过，有些有拖延症的人其实挺厉害的。他们对自己的能力其实认识的很清楚，因为能在截至日期前把事情做的刚刚好，又不至于太差。）</p><p>曾经，他作业做到很晚，我们怕耽误他晚上睡觉时间，让他第二天早点起来再做。没想到他后来就利用这个规则，拖到晚上不想做了就说累，但第二天早上又不愿意起来。后来有一次我就逼他作业晚上必须当天做完，一直做到十一点多。</p><p>所以，现在只能和睡觉共享同一招，没按时间做完作业就没手机玩了；全部作业做完才能睡。可是这种做法似乎并没太多提高他的积极性。</p><p><strong>对于规则制定者来说，平衡好各方各面，减少被利用的漏洞，同时又尽量引导去好的一方面是非常难的</strong>。虽然说强制 996 是很多公司领导懒政的表现，但你也未必能制定比它更“简单公平”的规则。在公司制定的规则，你还可以那“钱”来约束一个人，但是在家里呢？<strong>规则怎么制定，以及设定怎样的惩罚措施，可以很好地反映制定者的层次</strong>。</p><p>不知道非 IT 界的有多少人知道之前的<a href="https://www.zhihu.com/question/50600301" target="_blank" rel="noopener">阿里巴巴安全部门月饼事件</a>？有兴趣的可以看看。说说你了解的，或经历的与规则相关的趣事？或者给予我一些建议？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小时候，我们觉得自己要遵守大人和社会制定的各种规则，实在是太不自由了。&lt;br&gt;长大后，当需要为别人制定规则时，你可能会发现这是更令人头疼的事情。&lt;/p&gt;
&lt;p&gt;这怎么可能，制定规则还不简单吗？是啊，你定你的规则，没人拦着你。&lt;/p&gt;
&lt;p&gt;可你凭什么让别人遵守？甚至你本人都
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Rule" scheme="http://www.thinkingincrowd.me/tags/Rule/"/>
    
  </entry>
  
  <entry>
    <title>区块链和贸易战</title>
    <link href="http://www.thinkingincrowd.me/2019/05/26/blockchain-and-trade-war/"/>
    <id>http://www.thinkingincrowd.me/2019/05/26/blockchain-and-trade-war/</id>
    <published>2019-05-26T03:53:52.000Z</published>
    <updated>2019-05-26T04:08:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>从我接触比特币，到认识区块链，到目前参与联盟链相关的开发项目，我对比特币和区块链的认识，由全面的盲目相信，到冷淡排斥，到现在秉持技术的理性和带着忧虑的天真期望。</p><p>最初的盲目相信，因为我看到比特币在自由，公正（无法篡改），平等（公平奖励）方面的理念，以及中本聪对各国政府和法币资本体系的态度。这种天生带点反叛，又有点天真美好的想法，真的是很吸引我。</p><h3 id="冷淡排斥"><a href="#冷淡排斥" class="headerlink" title="冷淡排斥"></a>冷淡排斥</h3><p>后来，随着虚拟货币的疯狂，我一开始是兴奋的，不是因为它的价值疯涨，而是因为我以为终于有更多人看到它的价值，认可它。但是，一系列的疯狂发币，推广，欺诈，不切实际的伪概念，让我对大部分的币和所谓的区块链项目都很排斥，也认识到大多数的吹捧，仅仅是金钱方面的贪婪。</p><p>作为一个技术人员，我认为区块链就是一个拥有无法篡改特性的分布式数据库。所以，它可以让以前缺乏信任的组织或个人，通过技术手段，增强信任，加速数据的分享。于公链，它应当具备激励手段，才能让参与者有热情和贡献；于联盟链，则侧重于数据合作共享。</p><p>ArcBlock 公众号的这篇文章<a href="https://mp.weixin.qq.com/s/aEy8MpIQB8jd7OO35tvkvQ" target="_blank" rel="noopener">拨开“名词”迷雾，五图看清区块链网络发展趋势</a>，很透彻地说明区块链作为技术，和以往的互联网，承担的角色是一样的。它是基础架构，而在此之上的用户，并不需要留意到它的存在，正如现在的网络用户不需要知道 TCP/IP。</p><p>而现在很多所谓声称构建在区块链上的 Dapp，和以前的没任何区别。它们除了可能基于某个公链，还依附于某个特定的中心化的 Dapp 服务提供商。那这个服务提供商，背后究竟有没有使用区块链，其实用户并不清楚。</p><p>所以，那段时间也写了好几篇文章：</p><p><a href="http://www.thinkingincrowd.me/2018/03/30/many-blockchain-products-are-trash-compared-to-bitcoin/">很多所谓的“区块链”项目，在比特币面前就是渣</a><br><a href="http://www.thinkingincrowd.me/2018/05/08/is-blockchain-valuable/">区块链到底有没有价值</a><br><a href="http://www.thinkingincrowd.me/2018/05/23/is-press-one-investment-logic-reasonable/">PRESS.one 的投资逻辑」合理吗？</a>  </p><p>从上面的几篇文章可以看出，我对很多区块链项目或想法都是持怀疑态度的，即便我依然相信这个技术和某些项目。我的看法，慢慢趋向于技术层面的理性考虑和分析。</p><h3 id="带着期望的忧虑"><a href="#带着期望的忧虑" class="headerlink" title="带着期望的忧虑"></a>带着期望的忧虑</h3><p>根据 ArcBlock 的<a href="https://mp.weixin.qq.com/s/3LgWjI7DanziUWsl_g4aEQ" target="_blank" rel="noopener">去中心化应用的五大制胜关键</a>里面提到的其中四大关键：  </p><ul><li>支持去中心化的用户身份</li><li>支持用户的数据可迁移性</li><li>必须建立在开放协议之下</li><li>充分利用数字资产的优势</li></ul><p>这些要求，都是革当前中心化巨头的命。</p><p>现在的互联网，远没有以前开放了。数据孤岛现象相当明显。各大巨头都把用户数据抓在自己手里，不让搜索引擎抓取。用户数据，用户关系，可谓巨头的核心资产。如果 Dapp 的制胜关键，是要让用户数据可迁移，建立在开放的协议下，则是要求现有的巨头放弃自己的核心用户资产，谈何容易。而数字资产，则是挑战当前的各国政府和法币资本体系，更是困难重重。</p><p>我现在参与的联盟链项目开发，参与方遍布国际。国内的企业担心国外云平台安全，不能把数据存放在国外服务器。反之亦然。</p><p>最近，美国从打击华为开始，和我们祖国展开的贸易战，更是说明了国家层面的利益，对技术和商业自由活动的打击。连标榜自由的灯塔国尚且如此恶心，要通过区块链实现自由互通，可谓“路漫漫其修远兮”啊。</p><p>有兴趣的朋友，可以看看 TK 教主的两篇微博：</p><p><a href="https://weibo.com/1401527553/Hu9Dk7lKd" target="_blank" rel="noopener">数字货币神教要成事</a><br><a href="https://weibo.com/1401527553/HvEHlFRzo" target="_blank" rel="noopener">《“法国华为”是如何被美国吃掉的？》</a>  </p><p>区块链要发展，可能关键不在于技术，而在于和现实的强权对抗。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从我接触比特币，到认识区块链，到目前参与联盟链相关的开发项目，我对比特币和区块链的认识，由全面的盲目相信，到冷淡排斥，到现在秉持技术的理性和带着忧虑的天真期望。&lt;/p&gt;
&lt;p&gt;最初的盲目相信，因为我看到比特币在自由，公正（无法篡改），平等（公平奖励）方面的理念，以及中本聪对
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Blockchain" scheme="http://www.thinkingincrowd.me/tags/Blockchain/"/>
    
  </entry>
  
  <entry>
    <title>叫你的家长来！</title>
    <link href="http://www.thinkingincrowd.me/2019/05/21/call-for-parent/"/>
    <id>http://www.thinkingincrowd.me/2019/05/21/call-for-parent/</id>
    <published>2019-05-21T15:19:14.000Z</published>
    <updated>2019-05-21T15:20:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>前两天我在<a href="https://m.weibo.cn/status/4373333325766309" target="_blank" rel="noopener">微博</a>上看到了如下文字，甚是感慨，就转发到了朋友圈。有人评论说：“这太极端了吧？”。我想针对此再详细说说我的想法。</p><blockquote><p>我记得我小的时候，如果一个学生在学校犯了错误，老师很生气，于是老师使用了最终手段「我要把你家长叫来！」<br>我一直很好奇一个问题，家长比起教师更缺乏教育经验，也没有接受过系统的教育训练，为什么老师束手无策的时候家长却可以解决呢？</p><p>后来一个数学老师和我说，其实根本目的从来就不是让家长能解决什么问题。<br>而是让家长感到莫大的羞辱，然后回去把孩子骂一顿打一顿，干一些法律不允许教师做出的行为，教唆家长来执行它，来让自己解气。<br>于是还发展出一个更高级的玩法。就是打电话到家长的公司，让家长的上司给家长传达学生在学校里干的坏事，以加强这一行为的报复感。<br>而对于能否从根本上解决学生的问题，其实并不抱太大的期待。</p><p>从那个时候我就知道，一旦一个老师使用了「叫家长」的招数，就直接证明了这个教师职业能力的缺乏，并且怀着极强的报复心试图霸凌学生。<br>而从理解这一点的根本意义之后，就再也不害怕什么叫家长不叫家长了。</p></blockquote><p>先说我的观点吧，即便不是 100%，99% 的老师都是这样的。而真正怀着了解家里情况，沟通学生现状的由来，并尝试解决问题的老师太少。如何知道 Ta 是哪种老师呢？只看以下两点就够了。</p><ol><li>方式</li><li>态度</li></ol><h2 id="方式"><a href="#方式" class="headerlink" title="方式"></a>方式</h2><p>先不说叫家长，老师对家长施加压力，甚至羞辱家长的方式其实都很常见。现在都有家长群，或者“校训通”（学校和家长单向通信的某种短信服务），老师每天都可能在里面点名“某某”哪些方面表现不好。</p><p>管理学上有个指导原则：“<strong>公开赞扬，私下批评</strong>”。但是，从我小时候到现在，学校教育无处不存在公开批评。这也难怪，中华的传统美德。所谓的抓典型就是这个理。</p><p>我有幸在上班期间接到一次儿子在学校打来的电话。儿子当时哭得很凄凉，我问：“怎么了？” 他说：“我被老师叫到办公室，然后让我打电话给家长。” 我说：“那你做了什么让老师罚到办公室，然后要打电话给我？” 他说：“我在课堂上写金牌学案了。” 我一听，好吧，先回了一句：“我知道了。老师要和我说吗？” 然后他在那头问老师。期间我听到老师和他说的一些片段：“打给谁了？你们说的粤语，我听不懂。告诉你爸爸了是吧？” 然后儿子回复我说不用和老师讲，就挂电话了。</p><p>事情的缘由就是儿子觉得老师讲的内容都懂了，想在课堂上提前把作业做了，晚上多些时间玩。结果被老师抓住说不听课。</p><p>虽然错的是儿子，但我其实是有点气愤的。做本堂课的作业，还不是讲话影响他人什么的，这样的事，竟然还要动用到打电话给家长？老师是没有其它合适的教育手段了吗？我觉得私下肯定一下他的能力，问他一个难一点的问题，然后指出上课不听讲会遗漏一些重要的内容，让他意识到自己的错不更好吗？让小朋友打电话给家长，而不是自己和家长谈，这明显只是想借助家长的权威来惩罚学生。</p><p>同理，在开家长会（令一种叫家长来的形式）的时候，你听老师发言的话，就能知道一个老师的教育理念和处理方式有没有问题。有些老师直接就让家长每天检查作业，签名什么的，一看就是推个锅让家长监督。本来要做什么作业，做的怎么样，就是学生的责任，老师监督审核为辅。有问题一直没法调整，家长再协助教育。一上来就检查签名的，就是想借父母权威，帮自己省事。</p><p>所以，你想知道老师叫家长究竟是什么目的，是羞辱学生或家长，施加压力，还是想更好地解决问题，看 Ta 使用的方式就行了。</p><h2 id="态度"><a href="#态度" class="headerlink" title="态度"></a>态度</h2><p>商量如何解决问题，和斥责的态度，我觉得大家应该都能分得清楚吧？<strong>老师和家长，在教育孩子上，我觉得地位是平等的，是双方共同的责任</strong>。我不会觉得孩子学习或者纪律不好，是老师的责任，也不会觉得完全是家长的责任。</p><p>我可以理解，教育孩子是很难的事情，很容易就火冒三丈，血压飙高。但是，一但叫家长来了，如果 Ta 和家长对话的时候，都无法用稍微平静的语气，平等对话，而是斥责，埋怨家里没管教好，你也可以知道 Ta 是想和你一起解决问题，还是羞辱你，让你自己去解决问题。</p><p>被叫见家长，是令人头疼的问题。但是，如果让我遇到一个真正想着如何与家长一起解决问题的老师，被 Ta 叫见家长，是幸运的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前两天我在&lt;a href=&quot;https://m.weibo.cn/status/4373333325766309&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微博&lt;/a&gt;上看到了如下文字，甚是感慨，就转发到了朋友圈。有人评论说：“这太极端了吧？”。我想针
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Education" scheme="http://www.thinkingincrowd.me/tags/Education/"/>
    
  </entry>
  
  <entry>
    <title>我们总会尽最大可能“被看见”</title>
    <link href="http://www.thinkingincrowd.me/2019/05/01/we-go-length-to-be-seen/"/>
    <id>http://www.thinkingincrowd.me/2019/05/01/we-go-length-to-be-seen/</id>
    <published>2019-05-01T03:15:30.000Z</published>
    <updated>2019-05-01T03:15:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>上周六，是儿子邀请同学到家里来搞生日聚会的日子。<br>但是，在聚会前几天，儿子向我们说，有个经常在班里欺负其它人的 W 同学，不知道为什么知道了这个聚会，已经向儿子施压，说自己一定会来。即便儿子已经拒绝过他，还是担心他会硬闯。</p><p>聚会当天，这件事前令他担忧的事情真的发生了。W 同学向另一位受邀的同学谎称自己也受邀，拿到了地址，然后不请自来。W 同学来到我们家后，一开始在显摆他带来的超大吃鸡阻击枪（抱歉我真的不知道型号），然后又拿奶片糖分给其他人吃，还当场玩起了吃鸡游戏。但是，也只是有一两个小朋友搭理他。</p><p>根据我们和儿子之间的约定，如果他不请自来，我和妈妈会把他请走。原因是他之前还打过不少同学，包括我儿子，所以大部分同学都不喜欢和他在一起玩。而且，来参加聚会的同学的家长都不知道他会出现。因此，即便他目前没做什么过分的事情，我们觉得，如果继续让他留着，同学们没法玩得尽兴，家长可能也会有意见。</p><p>大雨倾盘下了半小时多，终于渐停。我们拿出来一部分吃喝的东西招呼过大家后，妈妈单独和 W 同学私下说明了原因，并告诉他只要以后不欺负小朋友，下次一定让他参加聚会。然后就让他带上自己的东西和一些吃的离开了。</p><p>聚会正式开始了好一会，我们一直好奇怎么还有一位同学还没到。后来发现原来 W 同学一直坐在我们单元楼下，而那位没到的同学就在楼下玩他的手机。</p><p>啰啰嗦嗦的讲了这么久，不知道大家从中看到了什么。你觉得如果这件事情发生在你孩子身上，或者你讨厌的人不请自来到了你的聚会，你会怎么做？</p><p>据了解，这已经不是 W 同学第一次闯入其他人的生日聚会了。如此大费周章地纠缠于他人，显摆他的玩具，拉拢玩伴，到底是为什么呢？</p><p>我觉得他是太<strong>渴望关系，渴望被看见，被认可</strong>了。</p><p>一直以来，欺负同学的他经常被排斥和忽视。缺乏关系的他，自然不被看见和认可。为了把自己卷入到某种关系里头，让自己有参与和存在感，一些行为，甚至是带“强迫性”的，就很自然的出现的。但是，为什么一开始的时候，他要去“欺负”同学，让这个恶性循环得以开始呢？据了解，他的爸爸和爷爷都比较暴力。所以，可能暴力也是他唯一知道的相处方式。  </p><p>关系对于人来说是非常重要的。</p><p>据闻神圣罗马帝国皇帝腓特烈二世曾经做过一个臭名昭著的实验，来证明人类的原始语言是什么。他让一批护士照顾婴儿，期间只进行喂养和洗澡，但严禁任何必要的互动，并在任何情况下都不得说话和发声进行语言的安抚。结果，腓特烈二世并无从实验获得任何结论，因为所有的婴儿都因为缺乏基本的爱和互动而死亡了。另一个美国心理学家哈利·哈洛进行的恒河猴实验（又称母爱剥夺实验）也反映出关系对灵长类生物的重要性。</p><p>缺乏关系，当然就无法“被看见”。</p><p>上面的例子看起来比较遥远，甚至荒谬。但是我们自己对“被看见”，被认可的需求也应该很熟悉吧？今天剪了一个头发，怎么都没人发现？我发的朋友圈怎么都没人点赞？我写的文章，怎么都没人看和打赏？</p><p>儿子幼儿园玩伴的妈妈，我一直很敬佩的一位家长，她了解到上面的事情后，和我分享了下面的一段话。我觉得大家都可以学习体会一下：</p><blockquote><p>我们班也有个同学，也很淘气，元元班长管理他时，曾经也打元元，老师，校长都找他和他家长谈过话，没用，之后还是照样，后来我找他谈，夸赞他的优点，我教元元也用同样的方法管理他，其他人都说他不好，我就让元元找他的优点说，（他有次科学考了全班第一），现在再没听到元元说他欺负她了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周六，是儿子邀请同学到家里来搞生日聚会的日子。&lt;br&gt;但是，在聚会前几天，儿子向我们说，有个经常在班里欺负其它人的 W 同学，不知道为什么知道了这个聚会，已经向儿子施压，说自己一定会来。即便儿子已经拒绝过他，还是担心他会硬闯。&lt;/p&gt;
&lt;p&gt;聚会当天，这件事前令他担忧的事
      
    
    </summary>
    
      <category term="Psychology" scheme="http://www.thinkingincrowd.me/categories/Psychology/"/>
    
    
      <category term="Relationship" scheme="http://www.thinkingincrowd.me/tags/Relationship/"/>
    
  </entry>
  
  <entry>
    <title>基于特性的测试更接近于第一原理</title>
    <link href="http://www.thinkingincrowd.me/2019/04/16/property-based-test-is-closer-to-first-principle/"/>
    <id>http://www.thinkingincrowd.me/2019/04/16/property-based-test-is-closer-to-first-principle/</id>
    <published>2019-04-16T13:47:23.000Z</published>
    <updated>2019-04-21T14:27:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近翻译了一篇<a href="https://elixirschool.com/zh-hans/lessons/libraries/stream-data/" target="_blank" rel="noopener">文章</a>，里面介绍的是 Elixir 生态下，一个基于特性测试（property-based test）的工具库 StreamData。里面的概念还真是第一次听，也给我带来一些新的想法。强烈建议大家看看，即便你不懂 Elixir 语法，但也不妨碍看懂。</p><p>关于单元测试，我自认是没有使用 TDD，也确实写的不多，但也不是没有任何经验（在我的博客 Unit Test 标签下还是有那么几篇文章的）。平时我们写的测试，都是基于用例的单元测试（example-based test）。基于用例的意思，就是选择几种不同的输入值（example），判断输出是否和期望相同。这种做法的不足地方在于，如果开发人员经验不足，选择的用例没有包含极端情况，或边界值，可能就会隐含特定条件下会触发的 bug。</p><p>而基于特性的测试可以很好的解决这个问题。那基于特性是什么意思呢？</p><p>那篇<a href="https://elixirschool.com/zh-hans/lessons/libraries/stream-data/" target="_blank" rel="noopener">文章</a>里要测试的函数功能很简单，就是把输入的字符串，列表等数据，按另一个输入的次数，复制多次。函数签名可想象为 <code>duplicate(source, count)</code>。加入你输入的参数为 <code>&quot;a&quot;</code> 和 <code>4</code>，那输出值就是 <code>&quot;aaaa&quot;</code>。</p><p>平时我们要测试这个函数可能会分别考虑 <code>source</code> 为空字符串，<code>null</code>值，超长字符，空列表，<code>count</code> 为 <code>0</code>，正整数，负数等情况，分别写不同的测试用例，尽量覆盖不同的情况。最后的断言（assert）也一般是 <code>&quot;aaaa&quot; === duplicate(&quot;a&quot;, 4)</code> 这样的方式。</p><p>但是，当使用基于特性的思维来测试这个函数时，我们要考虑的点就不同了，最后写的断言也不一样。</p><p>这个函数的功能，就是把源数据，复制零或多份。所以，它的特性只有这两点：  </p><ol><li>返回值的长度，是源数据长度 * <code>count</code>（复制次数）</li><li>返回值只是源数据的不断重复，不会包含其它任何数据</li></ol><p>这就是这个函数的特性。所以，相应的测试用例的断言，也只有这两个。</p><p>所以，这种测试代码的编写，你需要做的就是总结出要测试的函数的核心特性。StreamData 这个工具库，则为每一个测试用例生成各种随机数据，并默认运行 100 次，试图帮你找出破坏代码行为的特殊数据。</p><p>用这种方法来写测试和断言和平时的做法还是很不一样的，一开始会很不习惯的。但是，我觉的这种思维方式似乎更接近于第一原理的运用，促进深入思考。Elon Musk 是这么说第一原理的：</p><blockquote><p>[With <a href="https://en.wikipedia.org/wiki/First_principle" target="_blank" rel="noopener">first principles</a>] you boil things down to the most fundamental truths … and then reason up from there.”  </p></blockquote><p>JavaScript 也有一个基于特性的测试工具库 <a href="http://jsverify.github.io/" target="_blank" rel="noopener">JSVerify</a>，下次写单元测试时我要尝试一下。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近翻译了一篇&lt;a href=&quot;https://elixirschool.com/zh-hans/lessons/libraries/stream-data/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;，里面介绍的是 Elixir 生态下，
      
    
    </summary>
    
      <category term="Sword" scheme="http://www.thinkingincrowd.me/categories/Sword/"/>
    
    
      <category term="Unit Test" scheme="http://www.thinkingincrowd.me/tags/Unit-Test/"/>
    
      <category term="First Principle" scheme="http://www.thinkingincrowd.me/tags/First-Principle/"/>
    
  </entry>
  
  <entry>
    <title>从未快乐地加班意味着从未投入，但这不是强制加班的借口</title>
    <link href="http://www.thinkingincrowd.me/2019/04/13/never-ot-means-never-all-in-but-not-reason-of-compulsory-ot/"/>
    <id>http://www.thinkingincrowd.me/2019/04/13/never-ot-means-never-all-in-but-not-reason-of-compulsory-ot/</id>
    <published>2019-04-13T07:07:56.000Z</published>
    <updated>2019-04-13T07:21:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近 <a href="https://github.com/996icu/996.ICU" target="_blank" rel="noopener">996.icu</a> 事件在程序员界闹得沸沸扬扬。  </p><blockquote><p>什么是 996.ICU？工作 996，生病 ICU。  </p></blockquote><p>996 其实是一种程序员界的一种工作状态：早上 9 点上班到晚上 9 点，一周工作六天。  </p><p>996 某种程度上来说只是加班的一种形式。这么多年来，去面试毕业生的时候，都会有人问：“你们公司要加班吗？” 然后我基本会反问：“你认为怎么样才算加班？什么样的加班你是不能接受的？”  </p><p>我说说自己的加班经历，和对加班的理解吧。</p><p>我试过加班到凌晨 4 点，然后 8 点继续上班；我经历过 995，和 996。有因为自己能力不足而独自加班，有为了项目进度和兄弟们一起拼搏，也有仅为遵守公司的制度。  </p><p><strong>我不喜欢加班，无法接受长期加班，憎恨无理的制度性常规性加班，但是愿意为自己喜欢的事情加班。</strong>  </p><p>对于程序员来说，业余时间持续学习，增进技能是很平常的事。即使不需要加班做公司的任务，很多人在下班后也会读书，写业余项目，针对工作面对的问题找学习资料和解决方案等。这些学习形式和内容，并不都和工作直接相关，但是对能力的提升是相当有帮助的。间接来说，个人能力提高了，对公司和工作也是有好处的。花在这些方面的时间，即便是为了解决工作上碰到的问题，程序员一般来说也不会被认为是在加班。  </p><p>有时候的加班其实是幸福的。你和好几个同事，以及领导，为了某个项目或者功能需要赶一个进度。大伙每天晚上一起吃饭，吹吹水，然后拼搏到深夜。老板让大家打车回家，第二天稍微晚点来。这样的日子即使持续两三个月，甚至半年，大伙可能都不会觉得太辛苦。而且重要的是看着整个团队为着同一个目标而奋斗，最后有了成果，是很开心的。完了后，领导也会让每个人轮流补休几天，修整一下。大家其实也会很快满血复活回到岗位的。</p><p>这种加班意味着你的全情投入，没有体验过的话，真的可以说是白年轻了。</p><p>但是，很多老板却偷换概念（比如我们的马老板），把不加班就渲染为不奋斗，不热爱工作。</p><p><a href="https://weibo.com/1642088277/HpifMlEkq?from=page_1002061642088277_profile&amp;wvr=6&amp;mod=weibotime" target="_blank" rel="noopener">996 是修来的福报</a></p><p><a href="https://weibo.com/1977581633/HpjLIvCyR?from=page_1005051977581633_profile&amp;wvr=6&amp;mod=weibotime" target="_blank" rel="noopener">后悔忙工作，没时间陪家人</a></p><p>我们厌恶的加班其实是什么呢？<strong>制度性，常规性的加班</strong>。这也就意味着，并不是因为一个特殊的紧急的情况而需要临时性的加班，而是长年累月那种。甚至明明没什么东西要做，也还要被留在公司，到点才能离开。这是最让人讨厌的。</p><p>当然，有人会说，老板还 7x24 呢。对的，没错，那是他自己的公司，只要需要他负责，当然什么时间都要处理。其实很多程序员或客户支持，接到线上问题，需要支援的时候，也是义无反顾地加班紧急处理，并不是说放假就放手不管了。</p><p>那种制度性，常规性的加班，其实大部分时候只是上层管理，方向上的无能。当你招聘的人，并不够认真负责，上班经常划水，效率不高，导致任务滞后。可是你又不懂如何更好管理，激励员工，单纯粗暴无脑实施 996，祈望通过延长时间来补偿，结果恶性循环，员工更容易划水。又或者是公司产品方向不清晰，看着竞争对手有的功能就想赶超，没有重点，啥都想做，啥都说急着要上，像撞大运那样做一堆产品或功能上线，看哪个能火。一些领导还假惺惺的说，不赞成员工加班，但是却深夜发邮件，两小时内回复；或者快到下班时间开长时间的低效率的会议等。</p><p>程序员加班很频繁，但确实不是最累的行业。很多工厂，送外卖，餐馆等各色服务行业，每天可能工作多于 12 小时，一个月才一两天假期。所以，也有好一些从经济学角度来思考的文章。这些文章从某种角度来说，是对的。这些是竞争的结果，竞争最后会产生更优的企业，更好的福利。只是很多企业以竞争为借口，强迫超时劳动。你可以说，你可以选择离开啊。但是如果大范围都是这样的，你能去哪里？</p><p><a href="https://mp.weixin.qq.com/s/UBhJfM1Wz1gb1dNqznKlBg" target="_blank" rel="noopener">抗议996？GitHub上的那帮程序员纯属不要脸</a></p><p><a href="https://mp.weixin.qq.com/s/6ptYtp19MIIMLmrbt88kQw" target="_blank" rel="noopener">如何减少996</a></p><p>我一直不赞成那些高福利养懒人的政策，甚至怀疑最低工资是否合理。但是政府确实需要一些基本制度保障基本人权。如果你作为企业主，希望员工多干活，那可以用更好的激励手段，给加班补贴（政府没必要规定加班费是多少，而是由员工和企业约定），提供晚餐，调休等福利。只要双方愿意（甚至签合同），怎么加班都没问题。但是，冠冕堂皇地认为不加班就是不进取奋斗，低绩效评分就相当无耻了。</p><p>管理学大师彼得·德鲁克在 1966 年的「卓有成效的管理者」中就阐明知识工作者应该如何管理。人月神话说过：“往进度落后的项目新加人手只会更慢”。同理，用增加时间的方式来掩盖项目落后的真正问题同样无法改善。</p><p><strong>我们程序员只是讨厌无价值，和强制的加班。你有本事让我快乐地加班，是你的能力。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近 &lt;a href=&quot;https://github.com/996icu/996.ICU&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;996.icu&lt;/a&gt; 事件在程序员界闹得沸沸扬扬。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是 996.IC
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Programming" scheme="http://www.thinkingincrowd.me/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>自学编程的思维模式</title>
    <link href="http://www.thinkingincrowd.me/2019/03/20/mindset-for-self-teaching-programming/"/>
    <id>http://www.thinkingincrowd.me/2019/03/20/mindset-for-self-teaching-programming/</id>
    <published>2019-03-20T14:11:38.000Z</published>
    <updated>2019-03-20T14:10:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近，李笑来写了一本书「<a href="https://github.com/selfteaching/the-craft-of-selfteaching" target="_blank" rel="noopener">自学是门手艺</a>」，还开源了。这本书是以学习 Python 的切入点来教如何自学编程。</p><p>回顾了一下自己自学编程的经历，我也想补充一下自己的观点。</p><h2 id="成长足迹"><a href="#成长足迹" class="headerlink" title="成长足迹"></a>成长足迹</h2><p>我还很清楚记得，在第一家公司，CORESOLUTIONS，最开始承担的工作任务。因为，当我问 Leader 我做出来的页面是不是他想要的效果时，他脸上的那一丝惊讶的表情，和我内心的那份窃喜，深深烙入我的内心。</p><p>这个工作任务是在公司内部打造的 ERP Web Application 的中实现某个页面。那个系统的页面，是由公司通过 JAVA 自研的 UI 渲染组件，在 JSP 里生成 HTML 来实现的。所以，网络外面完全查不到参考资料，我只能参考系统已有的页面和代码。不过，大概只花了半天，我就把页面模仿着做出来了。</p><p>之前我可没怎么写过 JAVA，我真正的编程生涯可以说是从进入这家公司后才开始的。因为我是非科班出身，底子差，怕被他们发现我太搓，所以不敢轻易问问题。全靠自己不断尝试，憋着劲自学 Java，JSP，JavaScript 和 DOM 等语言和技术。</p><p>虽然不是计算机科班出身，但是相比很多同事朋友，我学习新东西的速度算是比较快的。所以，我在这个公司待了差不多 8 年，期间公司经常让我参与不同的项目，接触的东西很杂，学了很多技术，也做了很多项目。而且很多情况下都要现学现用。</p><p>我带过测试小团队；在公司资深顾问集体跳槽后，当过技术支持；用 BI 和 Crystal Report 做过数据仓库的项目；用 Powerbuilder 做过 CS 架构的系统；当然也用 J2EE 做 BS 架构的 ERP 系统，等等。</p><p>最近的 2016 年中去了北京帮笑来做一块听听，用 Node.js。目前回到珠海，在企业内参与联盟链相关的项目开发，用 Hyperledger Fabric, SpringBoot 等技术。</p><p>虽然和外面很多大神相比，我还是差很远，但是通过对自己，同事，和带过的新人的观察，我发现影响学习速度的其中一个因素是思维模式。</p><h2 id="思维模式"><a href="#思维模式" class="headerlink" title="思维模式"></a>思维模式</h2><p>我说的模式其实就是：</p><ul><li>整体到局部</li><li>局部到整体</li></ul><p>除了编程，很多其它技能的学习，也都可以运用这两种不同的模式的。比如说，画画。</p><p>儿童最开始画画的时候，都是粗线条，大轮廓。随着年龄的增长，线条，轮廓慢慢变得精细，也有更多细节的填充。这个过程，是由人的感官，和肢体控制能力的发展水平决定的。所以，不少学习画画的教程，也是从构建物体的轮廓开始。这就是从整体到局部的过程。</p><p>但是，一本很出名的书，「<a href="https://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201" target="_blank" rel="noopener">Drawing on the right side of the brain</a>」，里面教授画画的技巧，则是把要临摹的图像上下倒置，强迫自己不看整体，只是从一点点的局部画起，最后才构成一个整体。是不是有点难以想象，或者不可思议？但是，如果尝试过，你会发现此方法的效果竟然会出奇地好。因为，每次只专注于一个小局部，把握好相对比例，偏差就不会太大，最后出来的整体效果也肯定八九不离十。这比一下子要掌握大轮廓更容易。</p><p>所以说，同样的技能，是可以运用不同的模式来学习的。只是，不同的技能，某种模式可能会稍微占有优势，至少在刚起步的阶段。而且，每个人习惯使用的思维模式是不一样的。那么，如果能够顺应技能的特点和自己的习惯，自学就很可能事半功倍了。</p><p>前面提到的我自己的第一个工作任务，之所以能那么快完成，是因为我懂得从整体理解代码结构，猜测局部的功能，然后套入自己的需求，只更改相关的部分，来做出自己的页面。相反，如果我深入查看每一个类和方法调用的细节，就会迷失在庞大的代码库，和错综复杂的相互引用之中。</p><p><strong>自学编程，我认为应该从整体到局部，再从局部回到整体</strong>。这两个模式看起来是反着来，但对于编程来说，却又相辅相成。</p><p><strong>只盯着任务细节，没有整体的概念，很容易形成只是按指示工作，不考虑对错，或忽略了其它方面的思考。而只看整体，不深入细节，又会导致知其然，而不知其所以然</strong>。</p><p>那如何才能把握好整体呢？这和我之前写的关于编程学习能力的文章也有关，有兴趣的朋友可以看看：</p><p><a href="http://www.thinkingincrowd.me/2016/09/15/Capability-for-Learning-Programming-Abstraction/">学习编程需要具备的基本能力 - 抽象</a><br><a href="http://www.thinkingincrowd.me/2016/09/16/Capability-for-Learning-Programming-Breakdown/">学习编程需要具备的基本能力 - 问题分解</a><br><a href="http://www.thinkingincrowd.me/2016/09/17/Capability-for-Learning-Programming-Ask-Wisely/">学习编程需要具备的基本能力 - 正确提问</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近，李笑来写了一本书「&lt;a href=&quot;https://github.com/selfteaching/the-craft-of-selfteaching&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;自学是门手艺&lt;/a&gt;」，还开源了。这本书是以学习 P
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Programming" scheme="http://www.thinkingincrowd.me/tags/Programming/"/>
    
  </entry>
  
  <entry>
    <title>想过哪个习惯对你的伤害最大吗？</title>
    <link href="http://www.thinkingincrowd.me/2019/03/03/which-habit-is-most-harmful-to-you/"/>
    <id>http://www.thinkingincrowd.me/2019/03/03/which-habit-is-most-harmful-to-you/</id>
    <published>2019-03-03T14:48:07.000Z</published>
    <updated>2019-03-03T14:51:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到了一个有意思的<a href="https://weibo.com/tv/v/Hj26ueeU3?fid=1034:4345361913823797" target="_blank" rel="noopener">视频</a>。在 UC Berkeley 的 Brian Harvey 教授和学生讲为什么不要作弊：</p><blockquote><p>You guys right now are constructing the person you are going to be for the rest of your life.  Human behavior is mostly a behavior of habit.  People talk as if you make big decisions all the time about what to do but that’s not true.  Almost all the time, you just do what you are in the habit of doing.  If you get in the habit of cutting corners this early in your career, you know, how are you going to make it through the harder upper division classes.  And then what are you going to do when you actually get a job and the person next to you isn’t doing the same thing you are doing?  Okey, you are not able to look over somebody’s shoulder but you are going to be able to find ways to cut corners.  …  And furthermore, what’s the best thing that can come out of cheating, you condemn yourself to a life of doing something you don’t know how to do and don’t like doing.  </p></blockquote><p>翻译过来的大意是：</p><blockquote><p>你们现在正在构建你们的人设。人的行为基本可以说是习惯。人们常认为很多时候都是一些重大的决策的选择而产生不同的后果。其实并不是这样的。多数时候，你只是根据习惯做事。如果你在生涯的早期就习惯于找捷径，那接下来那些更难的课你还怎么过？等你上班后，旁边的人和你做不同东西的时候，你怎么办？你没办法再抄，但你一定会再想办法找捷径。更重要的是，作弊给你带来的最大的好处是什么？是你迫使自己去做一些你不知道如何处理，也不喜欢的事情。</p></blockquote><p>习惯是很微妙的东西。</p><p>要养成一个好习惯，或要摆脱一个坏习惯，都是很难的。</p><p>难，并不是因为好坏。这里的好和坏，总体来说是从当下世俗的角度来看的，并不绝对。以前总说早睡早起好，但是，根据时间生物学的发现，有些人是属于猫头鹰类型，就是不容易早睡，很难强行改变的。难，只是因为这个改变和你的身体规律，或思维方式不一致，甚至是冲突的。  </p><p>一些习惯，它们有比较外显的特性，比如一些日常行为，睡眠，运动习惯等。而<strong>另一些习惯，则非常隐蔽，以至于你可能根本没有发现它们的存在</strong>。可是，<strong>往往却是这些不起眼的习惯，给你的行为，或命运带来很大的影响</strong>。你甚至都不知道很多事情是因为它而导致的。  </p><p>你可能习惯于逃避冲突。</p><p>工作上，你很容易附和他人，尽量避免提出不同的意见。这可能是因为担心由此伤害到你和他人的关系，又或者是自尊心，自卑在作祟。在亲密关系上，同样也会避免和伴侣争吵，很容易陷入僵化的互补性沟通模式。</p><p>你也许习惯于没任何规划，走一步算一步，并没有长远的目标。</p><p>工作上，你就不会有什么野心，要做到什么程度，升到什么职位，甚至连自己想从事什么职业都不知道。生活上，也不会计划一年旅游几次，什么时候买房买车，子女教育，父母养老怎么安排等。</p><p>你或许习惯于躲避困难，而不是迎难而上。</p><p>工作上，不敢接受挑战，只是挑简单的事情来做。感情上，一遇到困难就退缩，分手，没法维持长久的关系。</p><p>这些<strong>习惯，其实是身体，或思维长久以来固化的模式或捷径</strong>。从生物学来看，就是大脑中神经元的连接，使用越多的功能连接越强，用的越少越容易退化。<strong>所谓的舒适区，也就是身体或思维惯有的，抵抗或消耗最小的行动模式而已</strong>。所以，习惯的改变很难的。</p><p><strong>改变习惯的第一步，是留意到它的存在，以及存在的根本原因</strong>。你也许觉得我很可笑，怎么可能没留意到呢？真的可能的。即便你留意到了，可能也只是某一种外显的行为，而不是内在的原因。单单针对行为尝试做出改变，可能治标不治本，或者很容易气馁。尝试观察你要改变的习惯，和它建立关系，了解它，看看你要离开它的话，对你会产生什么影响，工作上或者生活上，有什么可以替代它吗？</p><p>在过去的两三年里，自己对亲密关系的看法和思考，让我真正留意到自己的一些行为和习惯，以及它给我带来的影响。希望未来的日子，我也能更好地摆脱这些坏习惯，改变自己，减少它们对我的影响。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看到了一个有意思的&lt;a href=&quot;https://weibo.com/tv/v/Hj26ueeU3?fid=1034:4345361913823797&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;视频&lt;/a&gt;。在 UC Berkeley 的 Bri
      
    
    </summary>
    
      <category term="Think" scheme="http://www.thinkingincrowd.me/categories/Think/"/>
    
    
      <category term="Habit" scheme="http://www.thinkingincrowd.me/tags/Habit/"/>
    
  </entry>
  
</feed>
